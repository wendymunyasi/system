
******************************************************************************
*  PROGRAM:      apdrcrs.mnu
*
*  WRITTEN BY:   W M Nyongesa
*
*  DATE:         12/93
*
*  UPDATED:      04/2015
*
*  REVISION:     $Revision:   1.58  $
*
*  VERSION:      Visual dBASE
*
*  DESCRIPTION:  This is a menu file used by apdrcrs.wfm for
*                performing simple tasks.  It allows adding and deleting
*                records, searching for a value in the ADJUST field of the
*                current table viewed, and exiting the form in view.
*
*  PARAMETERS:   FormObj -- the form to which this menu will belong.
*
*  CALLS:        None
*
*  USAGE:        form.menuFile = "apdrcrs.mnu"
*
*******************************************************************************
#include <Messdlg.h>

** END HEADER -- do not remove this line*
* Generated on 05/06/94
*
Parameter FormObj
NEW apdrcrs(FormObj,"Root")
CLASS apdrcrs(FormObj,Name) OF MENUBAR(FormObj,Name)
   this.Text = ""
   this.OnInit = {;set procedure to Sampproc.prg}

   DEFINE MENU FILE OF THIS;
       PROPERTY;
         Text "&FILE"

             DEFINE MENU EXIT OF THIS.FILE;
       PROPERTY; 
          StatusMessage "Return to the Previous Menu.",;
          Text "&RETURN TO PREVIOUS MENU",;
          SHORTCUT "F4",;
          OnClick CLASS::ONEXIT
  
      
       DEFINE MENU SEPARATOR000 OF THIS.FILE;
             PROPERTY;
               Separator .T.,;
               Text ""

            
   DEFINE MENU QUITALL OF THIS.FILE;
       PROPERTY; 
          StatusMessage "Leave Kenserve System.",;
          Text "Exit",;
          SHORTCUT "F8",;
          OnClick CLASS::ONQUITALL
          

   DEFINE MENU ORDER OF THIS;
       PROPERTY;
         Text "Debit/Credit"

         DEFINE MENU VIEWEDIT OF THIS.ORDER;
             PROPERTY;
               OnClick CLASS::VIEWEDITONCLICK,;
               Text "&EDIT",;
               Shortcut "Ctrl-E",;
               StatusMessage "Edit data."

         DEFINE MENU SEPARATOR1 OF THIS.ORDER;
             PROPERTY;
               Separator .T.,;
                  Text ""

         DEFINE MENU ADDORDER OF THIS.order;
             PROPERTY;
               OnClick CLASS::ADDORDERONCLICK,;
               Text "ADD-NEW Debit/Credit",;
               Enabled .t.,;
               Shortcut "F3",;
               StatusMessage "Add New Debit/Credit."

       DEFINE MENU ADDLINE OF THIS.order;
             PROPERTY;
               OnClick CLASS::ADDLINEONCLICK,;
               Text "ADD-ITEM",;
               Enabled .t.,;
               Shortcut "F7",;
               StatusMessage "Add a new product, item or service to the Debit/Credit."
               
            DEFINE MENU DELETELINE OF THIS.ORDER;
             PROPERTY;
               OnClick CLASS::DELETELINEONCLICK,;
               Text "Delete IteM",;
               Enabled .F.,;
               Shortcut "Ctrl-M",;
               StatusMessage "Delete the current product."
      
         DEFINE MENU SEPARATOR2 OF THIS.ORDER;
             PROPERTY;
               Separator .T.,;
               Text ""

       
DEFINE MENU REPORT OF THIS;
       PROPERTY; 
         Text "TASKS"

   DEFINE MENU REPORT OF THIS.report;
       PROPERTY;
         Text "Save",;
         enabled .t.,;
        OnClick CLASS::F5_RTN,;
               Shortcut "F5"
     DEFINE MENU REPORT2 OF THIS.report;
       PROPERTY;
         Text "Print",;
         enabled .t.,;
        OnClick CLASS::F9_RTN,;
               Shortcut "F9"
               
                      DEFINE MENU REPORT3 OF THIS.report;
       PROPERTY;
         Text "Duplicate",;
         enabled .t.,;
        OnClick class::F1_rtn,;
               Shortcut "F1"

  
   ****************************************************************************
   
   
  procedure DeleteLineOnClick
   PRIVATE Ppcoy,Ppdiv,Ppcen,Ppsto,Pptyp,Ppcla,Ppcod,PPRQTY,pamt,porder,porddate,pstock
   
   * Delete current record.
   ****************************************************************************
      select apdrcrln
      if ConfirmationMessage("Are you sure you want to delete this Item?",;
                          "Confirm") = YES .AND. grn_stk_no > "00" ;
                           .and. empty(post_date)
                           
            
            pamt = total
      delete  && DELETED is ON, so deleted records are still there until
              && a PACK is executed
           
                
              
      commit()
      form.changesMade = .t.
      begintrans()
           on error DO transerr WITH ERROR(), MESSAGE(),;
  PROGRAM(), LINENO()
   endif
   
    FORM.BrowseChangesMade()
      SELECT apdrcrs
    *  refresh
   ****************************************************************************
   procedure ADDORDERONCLICK

   * Add new record.
   ****************************************************************************
   private addForm, newOrder, saleDateField, orderNoField, custNoField, custNo,;
           inEditMode, integrityInEffect,CustTyp
   form.CheckChanged(.T.)
      orderNoField = field(1)                 && grn_no field
          OrderDateField = field(7)                && grn_date field
         select apdrcrs3
         go bottom
      IF Empty(grn_no) .or. .not. empty(post_date)
       if type("form.curPage") <> "U"
         inEditMode = form.curPage.inEditMode
         integrityInEffect = .T.              && Table integrity rules are used
      else
         inEditMode = form.inEditMode
         integrityInEffect = .F.
      endif

      if .not. inEditMode
         form.ViewEdit()                      && Make sure record is editable
      else if type("form.childBrowse") <> "U" && If calling from Customer/apdrcrs
         form.childBrowse.setFocus()
      endif
      form.changesMade = .T.
        form.previousRecord = recno()
       select apdrcrs3
         go bottom
    
    form.maxOrder = grn_no
     local ls1,ls2,ls3,ls4,ls5
      SELECT apdrcrs
          if empty(form.maxOrder)
      form.maxOrder = apdrcrsn->grn_no  && start of first operator
      endif
   
      append blank
      orderNoField = field(1)
      newOrder = val(form.maxOrder) + 1
      local wk1,wk2
       wk1 = neworder
      if wk1 > 0 .and. wk1 < 10
      wk2 = "00000"+str(wk1,1)
      else
      if wk1 > 9 .and. wk1 < 100
      wk2 = "0000"+str(wk1,2)
      else
       if wk1 > 99 .and. wk1 < 1000
      wk2 = "000"+str(wk1,3)
      else
       if wk1 > 999 .and. wk1 < 10000
      wk2 = "00"+str(wk1,4)
      else
       if wk1 > 9999 .and. wk1 < 100000
      wk2 = "0"+str(wk1,5)
      else
      wk2 = str(wk1,6)
      endif
      endif
      endif
      endif
      endif
     replace grn_no with wk2     && Assign new order number
      replace items with 1
       replace  total with 0             
        replace inv_py_amt with 0
         replace inv_disc with 0
       replace grn_qty with 0
       replace inv_status with "Yes"
          REPLACE  TOTAL_BEER WITH 0
          REPLACE TOTAL_UDV WITH 0
          REPLACE TOTAL_CASE WITH 0
          REPLACE TOTAL_SHEL WITH 0
          replace supply_qty  with 0
          replace supply_amt  with 0
            replace grn_tax  with 0
          replace grn_disc  with 0
          replace grn_levy  with 0
           replace grn_gross with 0
          replace grn_reject with 0
          replace grn_total with 0
           REPLACE DDE_DATE WITH DATE()
          REPLACE DDE_TIME WITH TIME()
          REPLACE DDE_USER WITH FORM.BLUSER
          replace shiftno with form.pshiftno
          replace shiftid with form.pshiftid
         REPLACE GRN_DATE WITH FORM.PSHIFTDATE
          replace paytype with "Invoice"
                      replace serialno  with 'Invoice'
                 REPLACE INV_DATE WITH GRN_DATE
                 replace btyp with 'L0'
                 replace bcla with '00'
                 replace bcod with '00'
                 replace bcoy with '1'
                 replace bdiv with '5'
                 replace bcen with '1'
                 replace bsto with 'A1'
                 replace pname with 'CREDITORS CONTROL'
          
          select apdrcrln3
     append blank
     replace grn_no with apdrcrs->grn_no
         replace grn_stk_no with "01"
          replace grn_date with apdrcrs->grn_date
       replace cost_price with 0
        replace total with 0
          replace supply_qty with 0
          replace supply_amt with 0
          replace levy_rate with 0
          replace levy_amt with 0
          replace tax_rate with 0
           replace cdisc_rate with 0
       replace pdisc_rate with 0
      replace net_price with 0
      replace rejected with 0
      replace uncorked with 0
      replace short with 0
      replace breakages with 0
      replace leakers with 0
      replace rej with 0
      replace sho with 0
      replace bre with 0
      replace unc with 0
      replace lea with 0
      
          replace tax_amt with 0
          *replace disc_rate with 0
          *replace disc_amt with 0
          REPLACE LIST_PRICE WITH 0
           replace supp_order with 0
           replace grntax_amt with 0
           replace grn_total with 0
           replace grn_gross with 0
           replace  items_unit with 0
           replace grn_cost with 0
             replace supply_tot with 0
          replace reject_tot with 0
          replace return_qty with 0
          replace return_amt with 0
          replace grn_cost with 0
          replace basic_amt with 0
          replace gross_amt with 0
            replace gratax_amt with 0
           replace gra_total with 0
           replace gra_gross with 0
             REPLACE DDE_DATE WITH DATE()
          REPLACE DDE_TIME WITH TIME()
          REPLACE DDE_USER WITH FORM.BLUSER
           replace gra_cost with 0
             replace vatprice with "Exclusive"
            replace trantype with "No Job Order"
                   
    select apdrcrsl
    replace grn_no with apdrcrs->grn_no
    replace grn_date with apdrcrs->grn_date
   
      
     select apdrcrln
     refresh
     go bottom
            
          
     REFRESH
         select apdrcrs
         seek apdrcrsl->grn_no
    REFRESH
    
        FORM.Svendor.SETFOCUS()
      
   
   endif
 * endif
   ****************************************************************************
   procedure ADDLINEONCLICK
      LOCAL L1,wk1,wk2,l2,l3,lpshdate,ls3,ls4,ls5,LNAME
 
   form.CheckChanged(.T.)
   select apdrcrln
   go bottom
if (val(grn_stk_no) > 0 .and. .not. (total = 0 .and. qty = 0) ;
 .aND. .NOT. EMPTY(apdrcrs->GRN_NO));
.or. (empty(grn_stk_no) .AND. EMPTY(apdrcrs->post_date)) ;
 .and. .not. empty(apdrcrs->grn_no)
      form.changesMade = .T.
        LNAME = NAME
         L1 = val(grn_STk_NO) + 1
         wk1 = l1
         if wk1 > 99
         quit
         endif
          if wk1 > 0 .and. wk1 < 10
      wk2 = "0"+str(wk1,1)
      else
      wk2 = str(wk1,2)
      endif
      select apdrcrln3
         append blank
         
     replace grn_no with apdrcrs->grn_no
     
      replace grn_stk_no with wk2
 replace cost_price with 0
        replace total with 0
          replace supply_qty with 0
          replace supply_amt with 0
          replace levy_rate with 0
          replace levy_amt with 0
          replace tax_rate with 0
          replace tax_amt with 0
           replace grn_date with apdrcrs->grn_date
            REPLACE LIST_PRICE WITH 0
           replace supp_order with 0
            replace grntax_amt with 0
           replace grn_total with 0
           replace grn_gross with 0
                replace cdisc_rate with 0
       replace pdisc_rate with 0
 replace net_price with 0
   replace rejected with 0
      replace uncorked with 0
      replace short with 0
      replace breakages with 0
      replace leakers with 0
   replace rej with 0
      replace sho with 0
      replace bre with 0
      replace unc with 0
      replace lea with 0
   
           replace grn_cost with 0
             replace supply_tot with 0
          replace reject_tot with 0
          replace return_qty with 0
          replace return_amt with 0
          replace grn_cost with 0
             replace basic_amt with 0
          replace gross_amt with 0
           replace gratax_amt with 0
            replace  items_unit with 0
           replace gra_total with 0
             REPLACE DDE_DATE WITH DATE()
          REPLACE DDE_TIME WITH TIME()
          REPLACE DDE_USER WITH FORM.BLUSER
           replace gra_gross with 0
           replace gra_cost with 0
           replace vatprice with "Exclusive"
           replace trantype with "No Job Order"
          select apdrcrln
          refresh
          go bottom
     
            
          select apdrcrs
  
        replace items with items + 1
        replace shiftno with form.pshiftno
          replace shiftid with form.pshiftid
       
       * 
          FORM.sprod.setfocus()
*   endif
   endif
  
   ***************************************************************************
   procedure ViewEditOnClick
   ****************************************************************************
   if .not. empty(apdrcrs->grn_no)
   form.ViewEdit()
   endif

   ****************************************************************************
   procedure Exit_OnClick
   ****************************************************************************
FORM.OKEXIT = .T.
       form.Release()
   
   Procedure F1_rtn
      do apdrcrsT.prg
      
Procedure F5_rtn
   local l1,l2,l3,l4,l5,l6,l7,l8,l9,l10,l11,l12,l13,l14,l15,l16,l17,l18,lok,L19
   lorderField = field(1)  
    if     ConfirmationMessage("Entered Everything Corretly to Commit changes?",;
                FormatStr("Order %1",&lOrderField)) = YES)

 form.CheckCommit(form.inEditMode) 
if    form.inEditMode
      form.ViewEdit()
      form.root.order.viewEdit.enabled = .F.
   endif
   form.root.order.ADDorder.enabled = .f.      
    form.root.order.ADDline.enabled = .f.

   select apdrcrs
   lok = .t.
   l1 = vsrce
   l2 = vtyp
   l3 = vpmod
   l4 = vendor_n
   l5 = grn_off
   l7 = inv_no
   l8 = inv_date
   l9 = pay_method
   l10 = btyp
   l11 = bcla
   l12 = bcod
   l13 = bcoy
   l14 = bdiv
   l15 = bcen
   l16 = bsto
   l17 = cashier_no
   L19 = JOB_ORDER
    if empty(l1) .or. empty(l2) .or. empty(l3) .or. empty(l4) .or. empty(l5) ;
     .or. empty(l9) .or. empty(l10) .or. empty(l11) .or. empty(l12) ;
     .or. .not. empty(post_date)  .or.  empty(l17) .or. empty(serialno) 
     LOK = .F.
     ? "STEP 1A WRONG"
     ENDIF
      IF empty(l15) .or. empty(l14) .or. empty(l13)
      LOK = .F.
      ? "STEP AB WRONG"
      ENDIF
      
      IF  (empty(inv_no)) .OR. .NOT. ROUND((SUPPLY_AMT - TOTAL),1) = 0
    lok = .f.
    ? "step 1C wrong"
    endif
   
    if .not. l10 = "L0"
     lok = .f.
     ? "problem 4"
     endif
       if .not. (l9 = "Debitnote" .or. l9 = "Creditnote")
    lok = .f.
    ? "Problem 8"
    endif
 
     if l9 = "Debitnote" .and. apdrcrln->TOTAL < 0
    lok = .f.
    ? "Problem 9"
    endif
      IF apdrcrln->TOTAL =  0
    ? "Problem 10"
    lok = .f.
    endif

  if l9 = "Creditnote" .and. apdrcrln->TOTAL > 0
    lok = .f.
    ? "Problem 11"
    endif
* if grn_date < start_date .or. grn_date > end_date .or. empty(grn_date)
*     lok = .f.
*    ? "Problem 12"
*    endif
 if lok
  DO ap30drcr.PRG WITH FORM.BLUSER,FORM.BLEVEL
form.Go_Top()

  ENDIF
 endif

Procedure F9_rtn
   local l1,l2,l3,l4,l5,l6,l7,l8,l9,l10,l11,l12,l13,l14,l15,l16,l17,l18,lok,L19
   lorderField = field(1)  
    if     ConfirmationMessage("Entered Everything Corretly to Commit changes?",;
                FormatStr("Order %1",&lOrderField)) = YES)
 form.CheckCommit(form.inEditMode) 
if    form.inEditMode
      form.ViewEdit()
      form.root.order.viewEdit.enabled = .F.
   endif
   form.root.order.ADDorder.enabled = .f.      
    form.root.order.ADDline.enabled = .f.
   select apdrcrs
    lok = .t.
   l1 = vsrce
   l2 = vtyp
   l3 = vpmod
   l4 = vendor_n
   l5 = grn_off
   l7 = inv_no
   l8 = inv_date
   l9 = pay_method
   l10 = btyp
   l11 = bcla
   l12 = bcod
   l13 = bcoy
   l14 = bdiv
   l15 = bcen
   l16 = bsto
   l17 = cashier_no
   L19 = JOB_ORDER
    if empty(l1) .or. empty(l2) .or. empty(l3) .or. empty(l4) .or. empty(l5) ;
     .or. empty(l9) .or. empty(l10) .or. empty(l11) .or. empty(l12) ;
     .or. .not. empty(post_date)  .or.  empty(l17) .or. empty(serialno) 
     LOK = .F.
     ? "STEP 1A WRONG"
     ENDIF
      IF empty(l15) .or. empty(l14) .or. empty(l13)
      LOK = .F.
      ? "STEP AB WRONG"
      ENDIF
      
      IF  (empty(inv_no)) .OR. .NOT. ROUND((SUPPLY_AMT - TOTAL),1) = 0
    lok = .f.
    ? "step 1C wrong"
    endif
   
    if .not. l10 = "L0"
     lok = .f.
     ? "problem 4"
     endif
     
    
      if .not. (l9 = "Debitnote" .or. l9 = "Creditnote")
    lok = .f.
    ? "Problem 8"
    endif
 
     if l9 = "Debitnote" .and. apdrcrln->TOTAL < 0
    lok = .f.
    ? "Problem 9"
    endif
      IF apdrcrln->TOTAL =  0
    ? "Problem 10"
    lok = .f.
    endif

  if l9 = "Creditnote" .and. apdrcrln->TOTAL > 0
    lok = .f.
    ? "Problem 11"
    endif
   * if grn_date < start_date .or. grn_date > end_date .or. empty(grn_date)
   *  lok = .f.
   * ? "Problem 12"
  *  endif
 
 if lok
  ? "Error in Update"
    DO ap30drcr.PRG WITH FORM.BLUSER,FORM.BLEVEL

      DO apdrcrst.PRG
      form.Go_Top()
  ENDIF
 endif
 
 
  ****************************************************************************
    procedure OnExit
     form.Release()

    procedure OnQuitAll
   
     form.Release()

 quit   
ENDCLASS

