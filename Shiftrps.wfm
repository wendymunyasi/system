////////////////////////////////////////////////////////////////////////////////
// Output Filename: C:\KENSERVICE\IDSSYS\SHIFTRPS_FCV.WFM                     //
// Created By:      dBASE Form Converter Wizard                               //
// Created On:      Thursday June 23, 2016 At 15:52:14                        //
// Object Count:    11                                                        //
////////////////////////////////////////////////////////////////////////////////
*******************************************************************************
*  PROGRAM:      Shiftrps.wfm
*
*  WRITTEN BY:   W Nyongesa
*
*  DATE:         05/2000
*
*  UPDATED:     12/2012
*
*  REVISION:     $Revision:   1.0
*
*  VERSION:      Visual dBASE
*
*  DESCRIPTION:  This program maintains the companies master file
*
*  PARAMETERS:   None
*
*  CALLS:        Shiftrps.mnu         (Menu file)
*                KBUTTONS.CC          (Custom Controls file)
*                SHIFT REF INFORMATION EDIT FORM.qbe         (View of tables)
*
*  USAGE:        DO Shiftrps.wfm
*
*******************************************************************************
#include <messdlg.h>
shell(.F.)
create session
set talk off
set design off
_app.FrameWin.Visible = .F.
_app.FrameWin.Text = "Shiftrps"
set century on
SET DATE TO BRITISH
set ldCheck off && To avoid language driver conflicts
#define Maxcoy 999
** END HEADER -- do not remove this line
//
// Generated on 23/06/2016
//
parameter bUser,bLevel,bModal
local f
f = new ShiftRpsForm()
if (bModal)
   f.mdi = false // ensure not MDI
   f.readModal()
else
   f.open()
endif

class ShiftRpsForm of FORM
   with (this)
      onClose = class::ONCLOSE
      open = class::OPEN
      metric = 6	// Pixels
      colorNormal = "n+"
      height = 932.0
      left = 31.0
      top = 13.0
      width = 1296.0
      text = "SHIFT REF INFORMATION EDIT FORM"
      windowState = 2	// Maximized
      mdi = false
      sizeable = false
      moveable = false
      view = "Shiftrps.qbe"
      menuFile = "SHIFTRPS.MNU"
      escExit = false
      mousePointer = 1	// Arrow
      maximize = false
      minimize = false
   endwith

   this.SREC = new RECTANGLE(this)
   with (this.SREC)
      left = 12.0
      top = 68.0
      width = 588.0
      height = 136.0
      text = "Edit Shift Date, Shift No and Shift Id to View/Print Shift Reports"
      colorNormal = "0x8080ff/BtnFace"
      fontName = "MS Sans Serif"
      fontSize = 12.0
      fontBold = true
   endwith

   this.CODETEXT = new TEXTLABEL(this)
   with (this.CODETEXT)
      height = 26.0
      left = 36.0
      top = 94.0
      width = 156.0
      text = "Shift Date:"
      colorNormal = "B/BtnFace"
      fontName = "MS Sans Serif"
      fontSize = 12.0
      fontBold = true
      alignVertical = 1	// Middle
      alignHorizontal = 2	// Right
   endwith

   this.SHDATE = new SPINBOX(this)
   with (this.SHDATE)
      onChange = class::SHDATE_ONCHANGE
      dataLink = "SHSUM->SHIFT_DATE"
      enabled = false
      height = 26.0
      left = 204.0
      top = 94.0
      width = 132.0
      colorNormal = "0x804000/W"
      colorHighLight = "B+/W*"
      rangeMax = {01/05/2010}
      rangeMin = {21/01/2010}
      fontName = "MS Sans Serif"
      fontSize = 8.0
      fontBold = true
   endwith

   this.LNAMETEXT = new TEXTLABEL(this)
   with (this.LNAMETEXT)
      height = 26.0
      left = 36.0
      top = 128.0
      width = 156.0
      text = "Shift No:"
      colorNormal = "B/BtnFace"
      fontName = "MS Sans Serif"
      fontSize = 12.0
      fontBold = true
      alignVertical = 1	// Middle
      alignHorizontal = 2	// Right
   endwith

   this.SHNO = new ENTRYFIELD(this)
   with (this.SHNO)
      onChange = class::CHANGE_NAME
      valid = class::VALID_NAME
      dataLink = "SHSUM->SHIFT_NO"
      enabled = false
      height = 26.0
      left = 204.0
      top = 128.0
      width = 48.0
      function = "!"
      colorNormal = "N/BtnFace"
      colorHighLight = "B+/W*"
      fontName = "MS Sans Serif"
      fontSize = 12.0
      fontBold = true
      validErrorMsg = "Name of Bill Rate Required"
   endwith

   this.TEXT1 = new TEXTLABEL(this)
   with (this.TEXT1)
      height = 26.0
      left = 36.0
      top = 162.0
      width = 156.0
      text = "Shift ID:"
      colorNormal = "B/BtnFace"
      fontName = "MS Sans Serif"
      fontSize = 12.0
      fontBold = true
      alignVertical = 1	// Middle
      alignHorizontal = 2	// Right
   endwith

   this.SHID = new ENTRYFIELD(this)
   with (this.SHID)
      onChange = class::SHID_ONCHANGE
      dataLink = "SHSUM->SHIFT_ID"
      enabled = false
      height = 26.0
      left = 204.0
      top = 162.0
      width = 48.0
      function = "!"
      colorNormal = "N/BtnFace"
      colorHighLight = "B+/W*"
      fontName = "MS Sans Serif"
      fontSize = 12.0
      fontBold = true
      validErrorMsg = "Name of Bill Rate Required"
   endwith

   this.PREVBUTTON = new PUSHBUTTON(this)
   with (this.PREVBUTTON)
      onClick = class::PREVIOUS
      height = 26.0
      left = 112.0
      top = 330.0
      width = 85.0
      text = "&PREVIOUS"
      fontName = "MS Sans Serif"
      fontSize = 8.0
      fontBold = true
   endwith

   this.NEXTBUTTON = new PUSHBUTTON(this)
   with (this.NEXTBUTTON)
      onClick = class::NEXT
      height = 26.0
      left = 196.0
      top = 330.0
      width = 85.0
      text = "&NEXT"
      fontName = "MS Sans Serif"
      fontSize = 8.0
      fontBold = true
   endwith


   procedure Open
   ****************************************************************************
   private CodeField
    form.bluser = buser
   form.blevel = blevel
   form.firstime = .T.
   if type("form.init") = "U"
      form.init = .T.

      set skip to                     && Shiftrps.qbe contains set skip to gldtl
      set exact off                   && the .qbe file contains SET EXACT ON

      set procedure to sampProc.prg additive
    Form.duplicate = .F.
      form.inEditMode = .F.           && indicator of view/edit state
      form.changesMade = .F.          && indicator of changes made to field values
      form.previousRecord = .F.       && Save record number when appending
        *** do calculations in another area so form doesn't get updated
        form.updated = .f.
        select shsum
    GO TOP                                  && new Receipts
   if eof()
   APPEND BLANK
   endif


      *** Open table for calculating totals and balance due in another work area
      *** so that datalinks are not affected by record movements


      ***
    *  if type("form.parentpayeeForm") <> "U" && Esc ok if have parent
    *     form.escExit = .T.
   *   endif

   endif
   * form.CoyInfoButton.KenpName = "Shiftrps.wfm"

   form::Open()                         && Now the form actually opens
   *    form.BrowseOnNavigate()              && calculate totals
   *       form.codingerrors()                        && check coding errors

   *      form.next.setfocus()
   ****************************************************************************

   procedure OnClose

   * Clean up.
   ****************************************************************************

   if this.inEditMode
      form.ViewEdit()                      && Finish transaction
   endif
      close databases
     close procedure SAMPProc.prg
     form.close()


   ****************************************************************************

   procedure BrowseOnNavigate
   ****************************************************************************
       *form.ptyp.Enabled = .F.
       if eof()
      form.root.shsum.viewEdit.enabled = .F.
   else
      form.root.shsum.viewEdit.enabled = .T.
   endif



   ****************************************************************************

   procedure ChangesMade

   * Indicate that changes have been made to the current record
   ****************************************************************************
   Form.ChangesMade = .T.
   ****************************************************************************

   procedure Next

   * Go to next record.
   ****************************************************************************

   form.CheckCommit(form.inEditMode)
  * if .not. eof()
   *   NEXTBUTTON::OnClick()
   * endif

   ****************************************************************************

   procedure Previous

   * Go to previous record.
   ****************************************************************************

   form.CheckCommit(form.inEditMode)
    *form.ptyp.Enabled = .F.
*    PREVBUTTON::OnClick()


   ****************************************************************************

   procedure CheckCommit (newInEditMode)

        * Finish transaction, if it has been started.
   ****************************************************************************
   private CodeField, changesMade
    local lk1
   *    lk1 = *form.ptyp.value
   changesMade = form.changesMade
   if form.changesMade
      CodeField = field(1)  && Field period
         commit()

       *form.ptyp.enabled = .F.
    if form.inEditMode .and. newInEditMode
         begintrans()
      endif
      form.changesMade = .F.
   endif
   if form.inEditMode <> newInEditMode
      if newInEditMode                       && Going to Edit mode
         begintrans()
      else                                   && Going to View mode
         if .not. changesMade .AND. .NOT. FORM.DUPLICATE
            rollback()
         endif
      endif
      form.inEditMode = newInEditMode
   endif

   * form.root.Receipt.add.enabled = .T.
   *form.codingerrors()
   ****************************************************************************

   procedure ViewEdit

   * Toggle between View and Edit modes.
   ****************************************************************************
   local inEditMode, editMenu, control

   editMenu = form.root.shIFTRPS.VIEWEdit

   *** If ending edit mode then close transaction, otherwise open it.
   if form.inEditMode
      form.checkChanged(.F.)
      editMenu.text = "&Edit"
      editMenu.shortcut = "Ctrl-E"
      editMenu.statusMessage = "Edit data."
   *      form.root.shsum.delete.enabled = .F.      && disabled in view mode
      form.CheckCommit(.F.)                        && Check transaction and
      form.text = "SHIFT REF INFORMATION EDIT FORM -- View Mode"          && change mode to View
   *      form.notesEditor.colorNormal = "N/W"
   *      form.childBrowse.modify = .F.
   *      form.notesEditor.modify = .F.
      form.statusmessage = "In View Mode. " + ;
                           "Select SHIFT REF INFORMATION EDIT FORM - Edit menu to " + ;
                           "edit/delete data."
     * form.nextCOYBUTTON.SetFocus()
   else                                            && Switch to edit mode
      editMenu.text = "Vi&ew"
      editMenu.shortcut = "Ctrl-E"
      editMenu.statusMessage = "View data."
   *      form.root.shsum.delete.enabled = .f.      && enabled in edit mode
      form.CheckCommit(.T.)                        && Check transaction and
      form.text = "SHIFT REF INFORMATION EDIT FORM -- Edit Mode"          && change mode to Edit

   *     form.notesEditor.modify = .T.
      form.statusmessage = "In Edit Mode.  " + ;
                           "Select menu SHIFT REF INFORMATION EDIT FORM - View to switch " + ;
                           "to View mode."
        *form.ptyp.Enabled = .F.

       *form.LnameEntry.SetFocus()

   endif

   inEditMode = form.inEditMode     && Faster if we don't reference a form
   control = form.first             &&    variable each time through the loop
   do
      if .not. control.className $ "BROWSE,EDITOR,NEXTBUTTON,PREVBUTTON,PUSHBUTTON,IMAGE,TEXT"
         control.enabled = inEditMode
      endif
      control = control.before
   until control.name = form.first.name
   *           form.gltyp.enabled = .f.
   *    form.glname.Enabled = .F.
       *form.LnameEntry.SetFocus()


   ****************************************************************************

   procedure CheckChanged(callCommit)

   * Check if changes have been made to the current entryfield.  This procedure
   * is called from menu routines to make sure the form.changesMade gets
   * updated when a menu is selected while the changed control has focus.
   ****************************************************************************
   private control, fieldValue, controlValue, typeText, typeValue

   if form.inEditMode
      control = form.activeControl
      if type("control.datalink") <> "U"
         fieldValue = control.datalink          && name of table field

         typeText = type("control.text")
         typeValue = type("control.value")
         do case
            case typeValue = "C"
               controlValue = control.value
            case typeValue $ "LU" .and. typeText = "C"
               controlValue = control.text
            otherwise
               controlValue = Null
         endcase
         if controlValue <> &fieldValue
            form.changesMade = .T.
         endif
      endif
   endif
   if form.changesMade .and. callCommit
      CLASS::CheckCommit(form.inEditMode)     && Check transactions
   endif

      Procedure change_name
      select shsum
      replace shift_no with this.value
    form.changesmade = .t.
      form.CheckCommit(form.inEditMode)

      Procedure valid_name
      if empty(this.value)
      isvalid = .f.
      else
      isvalid = .t.
      endif
      return isvalid

   Procedure SHDATE_OnChange
      form.changesmade = .t.
      select shsum
      replace shift_date with this.value
      form.CheckCommit(form.inEditMode)

   Procedure SHID_OnChange
   form.changesmade = .t.
   select shsum
      replace shift_id with this.value
      form.CheckCommit(form.inEditMode)

endclass

