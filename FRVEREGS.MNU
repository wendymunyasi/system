******************************************************************************
*  PROGRAM:      frveregs.mnu
*
*  WRITTEN BY:   W Nyongesa
*
*  DATE:         03/2001
*
*  UPDATED:      04/2014
*
*  REVISION:     $Revision:   1.58  $
*
*  VERSION:      Visual dBASE
*
*  DESCRIPTION:  This is a menu file used by frveregs.WFM for
*                performing simple tasks.  It allows adding and deleting
*                records, searching for a value in the Type field of the
*                current table viewed, and exiting the form in view.
*
*  PARAMETERS:   FormObj -- the form to which this menu will belong.
*
*  CALLS:        None
*
*  USAGE:        form.menuFile = "frveregs.mnu"
*
*******************************************************************************
#include <messdlg.h>

** END HEADER -- do not remove this line*
* Generated on 07/03/2001
*
Parameter FormObj
NEW TypeS(FormObj,"Root")
CLASS TypeS(FormObj,Name) OF MENUBAR(FormObj,Name)
   this.Text = ""
   this.OnInit = {;set procedure to SampProc.prg additive}

   DEFINE MENU FILE OF THIS;
       PROPERTY;
         Text "&File",;

         DEFINE MENU EXIT OF THIS.FILE;
             PROPERTY; 
               StatusMessage "Return to the Previous Menu.",;
               Text "&Return to Previous Menu",;
               ShortCut "F4",;
               OnClick CLASS::ONEXITALL

        
       DEFINE MENU SEPARATOR000 OF THIS.FILE;
             PROPERTY;
               Separator .T.,;
               Text ""


         DEFINE MENU QUITS OF THIS.FILE;
             PROPERTY; 
               StatusMessage "Leave Kenserve Integrated System.",;
               Text "Exit",;
               ShortCut "F8",;
               OnClick CLASS::QUITALL
   DEFINE MENU frveregs OF THIS;
       PROPERTY;
         Text "&CRT/Vehicle"

         DEFINE MENU VIEWEDIT OF THIS.frveregs;
             PROPERTY;
               OnClick CLASS::VIEWEDITONCLICK,;
               Text "&Edit",;
               Shortcut "Ctrl-E",;
               StatusMessage "Edit data."

         DEFINE MENU SEPARATOR1 OF THIS.frveregs;
             PROPERTY;
               Separator .T.,;
               Text ""


         DEFINE MENU ADD OF THIS.frveregs;
             PROPERTY;
               OnClick CLASS::ADDONCLICK,;
               Text "&Add",;
               Enabled .T.,;
               Shortcut "F3",;
               StatusMessage "Add a new CRT Vehicle."
               
                 DEFINE MENU SEPARATOR2 OF THIS.frveregs;
             PROPERTY;
               Separator .T.,;
               Text ""


         DEFINE MENU SEARCH OF THIS.frveregs;
             PROPERTY;
               OnClick CLASS::SEARCHONCLICK,;
               Text "&Search ...",;
               Shortcut "Ctrl-S",;
               StatusMessage "Search for a  CRTVehicle."

         DEFINE MENU SEPARATOR3 OF THIS.frveregs;
             PROPERTY;
               Separator .T.,;
               Text ""

  
           

  DEFINE MENU REPORT OF THIS;
       PROPERTY;
         Text "&Reports"

         DEFINE MENU ERRORTypeSREPORT OF THIS.REPORT;
             PROPERTY;
               OnClick {;create session ;set lock off ;do frveregs.rep},;
               Text "&List CRT/Vehicles.",;
               Shortcut "Ctrl-L"

 
   ****************************************************************************
   procedure AddOnClick

   * Add new record.
   ****************************************************************************
   private addForm, newType, inEditMode,PADD
        SELECT FRVEREGS3
        SET FILT TO EMPTY(CARD_NO) .OR. EMPTY(CARDVEHNO)
        GO TOP
        IF .NOT. EOF()
           PADD = .F.
           ELSE
           PADD = .T.
           ENDIF
   form.CheckChanged(.T.)
   if ConfirmationMessage("Are you sure you want to add a CRT Vehicle?",;
                          "Confirmation") = YES .and. form.blevel < 7 .AND. PADD
       inEditMode = iif(type("form.curPage") <> "U", form.curPage.inEditMode,;
                                                    form.inEditMode)
      if .not. inEditMode
         form.ViewEdit()                 && Make sure record is editable
         endif

                                            && and begin a transaction
      form.changesMade = .F.            && Since we are adding a record
         form.previousRecord = recno()   
          local loff,l1
                   select frveregs
                 go top
                 if eof()
                 loff = 0
                 else
                 
     GO bottom
          loff = val(order_no)
          endif
          
      loff = loff + 1 && current Type code
      
      if loff < 10
      l1 = "000"+str(loff,1)
      else
         if loff < 100
      l1 = "00"+str(loff,2)
      else
      if loff < 1000
     l1 = "0"+str(loff,3)
     else
      if loff < 10000
     l1 = str(loff,4)
      else
      quit
      endif
      endif
      endif
      endif
      if .not. empty(frveregs->order_no) .and. empty(frveregs->cardvehno)
      quit
      endif
    select frveregs
      append blank
      replace order_no with l1
      replace dde_date with date()
      replace dde_user with form.buser
      replace dde_time with time()
        replace total with 0
     REPLACE ACTION WITH 'A'
     FORM.SCUSTYPE.ENABLED = .T.
    FORM.SPOSTAL.ENABLED = .T.
    form.soff.enabled = .t.
   *    replace name with "Type officer's name Here"
            form.SCUSACC.setfocus()
     endif
   ****************************************************************************
   procedure SearchOnClick

   * Bring up Search3.WFM.
   ****************************************************************************
   private searchForm, searchItem, saveRec, saveFilt, searchperiod,;
           searchdoctype, searchdocref
      local l1
   if reccount() = 0                     && If table is empty, don't search
      InformationMessage("This table is empty.", "Sorry!")
   else
      form.CheckChanged(.T.)
      set procedure to Search.WFM additive
      searchForm = new SearchForm()
      searchForm.keyName = "Order"  && Indicator of key expression
        searchForm.formatting = "@X"
      searchForm.mdi = .F.
      searchItem = searchForm.Readmodal()
      if type("searchItem") = "O" .and. searchItem.id <> 0
                                      && If search wasn't cancelled
         saveRec = Bookmark()            && save current record in case seek is
                                      && unsuccessful
       searchperiod = left(searchform.value,4)
       l1 = left(searchform.value,4)
       searchdoctype = right(l1,2)
       searchdocref = right(searchform.value,6)
       form.enabled = .F.
       go top
 locate for order_no = searchperiod
         if .not. found()
            InformationMessage(FormatStr("Order %1 \n Was not Found.",;
                                         searchForm.value),;
                               "Info")
            if .not. eof()
               go saverec()
            else
               go bottom
            endif
         endif
         form.enabled = .T.
      endif

      searchForm.Release()
      close procedure Search.WFM
   endif
if .not. empty(frveregs->cardvehno)
   form.scustype.enabled = .f.
   form.spostal.enabled = .f.
   form.soff.enabled = .f.
   endif
   ***************************************************************************
   procedure ViewEditOnClick
   ****************************************************************************

   form.ViewEdit()

  
   ****************************************************************************
     procedure OnExitALL
   
  
   ****************************************************************************
   *      form.close()  
     form.Release()
   Procedure QUITALL
            form.Release()
            QUIT
  
ENDCLASS



