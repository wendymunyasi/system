
******************************************************************************
*  PROGRAM:      artrecs.mnu
*
*  WRITTEN BY:   W M Nyongesa
*
*  DATE:         12/93
*
*  UPDATED:     03/2015
*
*  REVISION:     $Revision:   1.58  $
*
*  VERSION:      Visual dBASE
*
*  DESCRIPTION:  This is a menu file used by artrecs.wfm for
*                performing simple tasks.  It allows adding and deleting
*                records, searching for a value in the order field of the
*                current table viewed, and exiting the form in view.
*
*  PARAMETERS:   FormObj -- the form to which this menu will belong.
*
*  CALLS:        None
*
*  USAGE:        form.menuFile = "artrecs.mnu"
*
*******************************************************************************
#include <Messdlg.h>

** END HEADER -- do not remove this line*
* Generated on 05/06/94
*
Parameter FormObj
NEW artrecs(FormObj,"Root")
CLASS artrecs(FormObj,Name) OF MENUBAR(FormObj,Name)
   this.Text = ""
   this.OnInit = {;set procedure to Sampproc.prg}

   DEFINE MENU FILE OF THIS;
       PROPERTY;
         Text "&FILE"

         
         DEFINE MENU EXIT OF THIS.FILE;
                PROPERTY; 
          StatusMessage "Return to the Previous Menu.",;
          Text "&RETURN TO PREVIOUS MENU",;
          SHORTCUT "F4",;
          OnClick CLASS::ONEXIT
  
      
       DEFINE MENU SEPARATOR000 OF THIS.FILE;
             PROPERTY;
               Separator .T.,;
               Text ""

            
   DEFINE MENU QUITALL OF THIS.FILE;
       PROPERTY; 
          StatusMessage "Leave Kenserve System.",;
          Text "EXIT",;
          SHORTCUT "F8",;
          OnClick CLASS::ONQUITALL
          

   DEFINE MENU ORDER OF THIS;
       PROPERTY;
         Text "Receipt"

         DEFINE MENU VIEWEDIT OF THIS.ORDER;
             PROPERTY;
               OnClick CLASS::VIEWEDITONCLICK,;
               Text "&EDIT",;
               Shortcut "Ctrl-E",;
               StatusMessage "Edit data."

         DEFINE MENU SEPARATOR1 OF THIS.ORDER;
             PROPERTY;
               Separator .T.,;
                  Text ""

         DEFINE MENU ADDORDER OF THIS.ORDER;
             PROPERTY;
               OnClick CLASS::ADDORDERONCLICK,;
               Text "ADD- New Receipt",;
               Enabled .T.,;
               Shortcut "F3",;
               StatusMessage "Add order."

       DEFINE MENU ADDLINE OF THIS.ORDER;
             PROPERTY;
               OnClick CLASS::ADDLINEONCLICK,;
               Text "ADD-ITEM",;
               Enabled .T.,;
               Shortcut "F7",;
               StatusMessage "Add a new product, item or service to the Receipt."
               
           DEFINE MENU DELETELINE OF THIS.ORDER;
             PROPERTY;
               OnClick CLASS::DELETELINEONCLICK,;
               Text "Delete IteM",;
               Enabled .F.,;
               Shortcut "Ctrl-M",;
               StatusMessage "Delete the current product."
          
         DEFINE MENU SEPARATOR2 OF THIS.ORDER;
             PROPERTY;
               Separator .T.,;
               Text ""

        
               
DEFINE MENU REPORT OF THIS;
       PROPERTY; 
         Text "Tasks"

   DEFINE MENU REPORT OF THIS.report;
       PROPERTY;
         Text "Save",;
         enabled .t.,;
        OnClick CLASS::F5_RTN,;
               Shortcut "F5"
           DEFINE MENU REPORT2 OF THIS.report;
       PROPERTY;
         Text "Save and Print",;
         enabled .t.,;
        OnClick class::f9_rtn,;
               Shortcut "F9"
               
                  DEFINE MENU REPORT3 OF THIS.report;
       PROPERTY;
       Text "Print Duplicate",;
         enabled .t.,;
        OnClick class::F1_rtn,;
               Shortcut "F1"

      
 
  
    procedure DeleteLineOnClick
   PRIVATE Ppcoy,Ppdiv,Ppcen,Ppsto,Pptyp,Ppcla,Ppcod,PPRQTY,pamt
   * Delete current record.
   ****************************************************************************
      select artrecln
   if ConfirmationMessage("Are you sure you want to delete this Item?",;
                          "Confirm") = YES .AND. EMPTY(artrecs->post_date) ;
                           .and. .not. eof()
            
     select artrecln
            
             pamt = total
      delete  && DELETED is ON, so deleted records are still there until
              && a PACK is executed
              select artrecs
              replace artrecs->items with artrecs->items - 1
              replace total with total - pamt
              IF artrecs->ITEMS = 0
              REPLACE artrecs->TOTAL WITH 0
    
              ENDIF
           SELECT artrecs
              
      commit()
      form.changesMade = .F.
      begintrans()
           on error DO transerr WITH ERROR(), MESSAGE(),;
  PROGRAM(), LINENO()
   endif
   SELECT artrecln
   IF .NOT. EOF() .and. .not. bof()
     FORM.BROWSECHANGESMADE()
     ELSE
     SELECT artrecs
      replace artrecs->total with 0
   replace artrecs->items with 0
 ENDIF
   SELECT artrecs
   ****************************************************************************
   procedure ADDORDERONCLICK

   * Add new record.
   ****************************************************************************
   private addForm, newOrder, saleDateField, orderNoField, custNoField, custNo,;
           inEditMode, integrityInEffect,CustTyp,pdate1,pvatp
   form.CheckChanged(.T.)
                          pvatp = FORM.PVATPRICE
                          pdate1 = FORM.PSHIFTDATE
  
      orderNoField = field(1)                 && order_no field
          OrderDateField = field(7)                && Order_date field
 select artrecln2
 go bottom
      select artrecs3
      go bottom
       IF empty(order_no) .or. (.not. empty(order_no) .and. .not. empty(post_date))
       if type("form.curPage") <> "U"
         inEditMode = form.curPage.inEditMode
         integrityInEffect = .T.              && Table integrity rules are used
      else
         inEditMode = form.inEditMode
         integrityInEffect = .F.
      endif

      if .not. inEditMode
         form.ViewEdit()                      && Make sure record is editable
      else if type("form.childBrowse") <> "U" && If calling from Customer/artrecs
         form.childBrowse.setFocus()
      endif
      form.changesMade = .T.
        form.previousRecord = recno()
         select artrecs3
      go bottom
    
      
    form.maxOrder = order_no
     local ls1,ls2,ls3,ls4,ls5,LSH,LID
      SELECT artrecs
     
        if empty(form.maxOrder)
      form.maxOrder = artrecsn->order_no  && start of first operator
      endif
   
      append blank
      orderNoField = field(1)
      newOrder = val(form.maxOrder) + 1
      local wk1,wk2
       wk1 = neworder
      if wk1 > 0 .and. wk1 < 10
      wk2 = "00000"+str(wk1,1)
      else
      if wk1 > 9 .and. wk1 < 100
      wk2 = "0000"+str(wk1,2)
      else
       if wk1 > 99 .and. wk1 < 1000
      wk2 = "000"+str(wk1,3)
      else
       if wk1 > 999 .and. wk1 < 10000
      wk2 = "00"+str(wk1,4)
      else
       if wk1 > 9999 .and. wk1 < 100000
      wk2 = "0"+str(wk1,5)
      else
      wk2 = str(wk1,6)
      endif
      endif
      endif
      endif
      endif
     replace order_no with wk2     && Assign new order number
      replace items with 0
       replace  total with 0
       replace order_date with  pdate1
 REPLACE BCOY WITH '1'
 REPLACE BDIV WITH '5'
 REPLACE BCEN WITH '1'
 REPLACE BSTO WITH 'A1'
 REPLACE BTYP WITH 'C0'
 REPLACE BCLA WITH '10'
 REPLACE BCOD WITH '00'
 replace source with '7'
 replace ftyp with '7'
 replace pmod with '7'
 replace frighter_n with '0001'
       
         replace bl_amt with 0
        replace al_amt with 0
        replace l_amt with 0
          replace pay_method with "Creditnote"
          replace paytype  with "Invoice"
      
        replace invtotal with 0
        replace paytotal with 0
        replace deptotal with 0
        LSH = FORM.PSHIFTNO
        LID = FORM.PSHIFTID
           REPLACE SHIFTNO WITH  LSH
        REPLACE SHIFTID WITH LID
          REPLACE DDE_DATE WITH DATE()
        REPLACE DDE_TIME WITH TIME()
        REPLACE DDE_USER WITH FORM.BLUSER
           replace recdate with order_date
           select artrecsL
    replace order_no with artrecs->order_no
    replace order_date with artrecs->order_date
  
          
      select artrecln3
     append blank
     replace order_no with artrecs->order_no
     replace stock_no with "01"
      replace order_date with artrecs->order_date
       replace other_date with order_date
        replace total with 0
           replace invtotal with 0
        replace paytotal with 0
        replace deptotal with 0
         REPLACE COY WITH '1'
 REPLACE DIV WITH '5'
 REPLACE CEN WITH '1'
 REPLACE STO WITH 'A1'
 REPLACE TYP WITH 'C0'
 REPLACE CLA WITH '10'
 REPLACE COD WITH '00'
 REPLACE DDE_DATE WITH DATE()
        REPLACE DDE_TIME WITH TIME()
        REPLACE DDE_USER WITH FORM.BLUSER
      selec artrecln
refresh
go bottom
         select artrecs
        replace artrecs->items with artrecs->items + 1
         form.soff.enabled = .t.
        if fgcoy->pospost = "Yes"
        form.CheckCommit(form.inEditMode)
        select artrecs
        seek artrecsl->order_no
          REPLACE SHIFTNO WITH FORM.PSHIFTNO
        REPLACE SHIFTID WITH FORM.PSHIFTID
         replace pay_method with "Creditnote"
          replace paytype  with "Invoice"
      
       refresh
         form.soff.setfocus()
         else
         form.sdate.enabled = .t.
         form.CheckCommit(form.inEditMode)
         select artrecs
        seek artrecsl->order_no
         REPLACE SHIFTNO WITH FORM.PSHIFTNO
        REPLACE SHIFTID WITH FORM.PSHIFTID
        replace pay_method with "Creditnote"
          replace paytype  with "Invoice"
      
         refresh
         form.sdate.setfocus()
         endif
   
   endif
   
   procedure ADDLINEONCLICK
      LOCAL L1,wk1,wk2,l2,l3,l4,ls3,ls4,ls5,LNAME
 
   form.CheckChanged(.T.)
      form.changesMade = .T.
      select artrecs3
      go bottom
         select artrecln
        go bottom
        if (empty(stock_no)  .and. .not. empty(order_no) ;
         .and. .not. empty(artrecs->order_no) .and. .not. artrecln->total = 0) ;
          .or. (stock_no = '01' .and. (artrecs->paytype='Invoice' .and. .not. empty(artrecln->bname) ;
          .and. .not. empty(artrecS->ORDER_NO) .and. artrecln->total > 0)) .and. .not. artrecs->pay_method ='Creditnote'
         L1 = val(STOCK_NO) + 1
         wk1 = l1
         if wk1 > 99
         quit
         endif
          if wk1 > 0 .and. wk1 < 10
      wk2 = "0"+str(wk1,1)
      else
      wk2 = str(wk1,2)
      endif
      select artrecln3
         append blank
         replace order_no with artrecs->order_no
          REPLACE COY WITH '1'
 REPLACE DIV WITH '5'
 REPLACE CEN WITH '1'
 REPLACE STO WITH 'A1'
 REPLACE TYP WITH 'C0'
 REPLACE CLA WITH '10'
 REPLACE COD WITH '00'
      replace stock_no with wk2
            replace order_date with artrecs->order_date
       replace total with 0
        replace other_date with artrecln2->other_date
        replace other_date with artrecs->order_date
            replace invtotal with 0
        replace paytotal with 0
        replace deptotal with 0
       replace  coy with "1"
 REPLACE DDE_DATE WITH DATE()
        REPLACE DDE_TIME WITH TIME()
        REPLACE DDE_USER WITH FORM.BLUSER
        
select artrecln
refresh
go bottom
          select artrecs
          if .not. eof()
  
        replace artrecs->items with artrecs->items + 1
         REPLACE SHIFTNO WITH FORM.PSHIFTNO
        REPLACE SHIFTID WITH FORM.PSHIFTID
     REPLACE ORDER_DATE WITH FORM.PSHIFTDATE
        if order_date = artrecs3->order_date .and. shiftno = artrecs3->shiftno ;
    .and. shiftid = artrecs3->shiftid
        REPLACE OFF WITH artrecs3->OFF
        REPLACE CASHIER_NO WITH artrecs3->CASHIER_NO
        REPLACE ANAME WITH artrecs3->ANAME
        else
        replace off with ""
        replace cashier_no with ""
        replace aname with ""
        endif
       
           FORM.SBANKA.setfocus()
  
   endif
   endif
  
   ***************************************************************************
   procedure ViewEditOnClick
   ****************************************************************************
if .not. empty(artrecs->order_no)
   form.ViewEdit()
   endif

   ****************************************************************************
   procedure Exit_OnClick
   ****************************************************************************
FORM.OKEXIT = .T.
        form.Release()
  
Procedure F1_rtn
      do artrecSP.PRG  WITH FORM.BLUSER
      
Procedure F9_rtn

form.CheckCommit(form.inEditMode)
if    form.inEditMode
      form.ViewEdit()
      form.root.order.viewEdit.enabled = .F.
   endif
   
   form.SDTOTAL.enabled = .f.
   form.root.order.ADDorder.enabled = .f.      
    form.root.order.ADDline.enabled = .f.
   select artrecS
   
local lerr
lerr = .f.

if  total = 0  .or. .not. EMPTY(post_DATE) .or. empty(serialno) .or. empty(lpo) .or. .not. source='7' ;
 .or. .not. frighter_n = '0001'
lerr = .t.
? "err 1"
endif

  
  if EMPTY(BCOY)  .or.    EMPTY(BTYP);
      .or. EMPTY(BCLA) .or. EMPTY(BCOD) .or. EMPTY(SOURCE) .or. EMPTY(FTYP);
       .or. EMPTY(PMOD) .or.  EMPTY(FRIGHTER_N) .or. EMPTY(OFF)  .or. empty(cashier_no) ;
       .or.  EMPTY(SHIFTNO) .or.  EMPTY(SHIFTID) .or. .not. paytype= 'Invoice' .or. .not. pay_method = 'Creditnote'
       lerr = .t.
       ? "err 2"
       endif
       if .not. (artrecln->typ = 'C0' .and. artrecln->cla = '10' .and. artrecln->cod = '00';
       .and. artrecln->coy = '1' .and. artrecln->sto='A1')
       lerr = .t.
       ? "err3"
       endif
     
       If .not. artrecs->total = artrecs->nett_total
      lerr = .t.
     ? "err 4"
     endif
     if .not. (btyp = 'C0' .and. bcla = '10' .and. bcod = '00')
      lerr = .t.
     ? "err 5"
     endif
     if empty(ssource) .or. empty(sftyp) .or. empty(spmod) .or. empty(sfrighter)
      lerr = .t.
     ? "err 6"
     endif
  if .not. (artrecln->source = ssource .and. artrecln->ftyp = sftyp .and. artrecln->pmod = spmod ;
   .and. artrecln->frighter_n = sfrighter)
      lerr = .t.
     ? "err 7"
     endif
  if .not. lerr

DO ARTRCPST.PRG WITH FORM.BLUSER,FORM.BLEVEL
do artrecSP.PRG  WITH FORM.BLUSER
 form.Go_Top()
 else
 
  ENDIF


Procedure F5_rtn

form.CheckCommit(form.inEditMode)
if    form.inEditMode
      form.ViewEdit()
      form.root.order.viewEdit.enabled = .F.
   endif
local lerr

form.SDTOTAL.enabled = .f.
  form.root.order.ADDorder.enabled = .f.      
    form.root.order.ADDline.enabled = .f.
   
SELECT artrecS
    
local lerr
lerr = .f.

if  total = 0  .or. .not. EMPTY(post_DATE) .or. empty(serialno) .or. empty(lpo) .or. .not. source='7' ;
 .or. .not. frighter_n = '0001'
lerr = .t.
? "err 1"
endif

  
  if EMPTY(BCOY)  .or.    EMPTY(BTYP);
      .or. EMPTY(BCLA) .or. EMPTY(BCOD) .or. EMPTY(SOURCE) .or. EMPTY(FTYP);
       .or. EMPTY(PMOD) .or.  EMPTY(FRIGHTER_N) .or. EMPTY(OFF)  .or. empty(cashier_no) ;
       .or.  EMPTY(SHIFTNO) .or.  EMPTY(SHIFTID) .or. .not. paytype= 'Invoice' .or. .not. pay_method = 'Creditnote'
       lerr = .t.
       ? "err 2"
       endif
       if .not. (artrecln->typ = 'C0' .and. artrecln->cla = '10' .and. artrecln->cod = '00';
       .and. artrecln->coy = '1' .and. artrecln->sto='A1')
       lerr = .t.
       ? "err3"
       endif
     
       If .not. artrecs->total = artrecs->nett_total
      lerr = .t.
     ? "err 4"
     endif
     if .not. (btyp = 'C0' .and. bcla = '10' .and. bcod = '00')
      lerr = .t.
     ? "err 5"
     endif
     if empty(ssource) .or. empty(sftyp) .or. empty(spmod) .or. empty(sfrighter)
      lerr = .t.
     ? "err 6"
     endif
  if .not. (artrecln->source = ssource .and. artrecln->ftyp = sftyp .and. artrecln->pmod = spmod ;
   .and. artrecln->frighter_n = sfrighter)
      lerr = .t.
     ? "err 7"
     endif
  if .not. lerr

DO ARTRCPST.PRG WITH FORM.BLUSER,FORM.BLEVEL
 form.Go_Top()
 else
 ? "errors"
 
  ENDIF

  ****************************************************************************
    procedure OnExit
     form.Release()

    procedure OnQuitAll
   
     form.Release()

 quit

ENDCLASS
       