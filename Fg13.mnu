******************************************************************************
*  PROGRAM:      Fg13.mnu
*
*  WRITTEN BY:   W M Nyongesa
*
*  DATE:         12/93
*
*  UPDATED:      09/2013
*
*  REVISION:     $Revision:   1.58  $
*
*  VERSION:      Visual dBASE
*
*  DESCRIPTION:  This is a menu file used by torders.wfm for
*                performing simple tasks.  It allows adding and deleting
*                records, searching for a value in the order field of the
*                current table viewed, and exiting the form in view.
*
*  PARAMETERS:   FormObj -- the form to which this menu will belong.
*
*  CALLS:        None
*
*  USAGE:        form.menuFile = "Fg13.mnu"
*
*******************************************************************************
#include <Messdlg.h>

** END HEADER -- do not remove this line*
* Generated on 05/06/94
*
Parameter FormObj
NEW torders(FormObj,"Root")
CLASS torders(FormObj,Name) OF MENUBAR(FormObj,Name)
   this.Text = ""
   this.OnInit = {;set procedure to Sampproc.prg}

   DEFINE MENU FILE OF THIS;
       PROPERTY;
         Text "&File"

         DEFINE MENU EXIT OF THIS.FILE;
             PROPERTY; 
               StatusMessage "Return to the Previous Menu.",;
               Text "&Return to Previous Menu",;
               ShortCut "F4",;
               OnClick CLASS::ONEXITALL

        
       DEFINE MENU SEPARATOR000 OF THIS.FILE;
             PROPERTY;
               Separator .T.,;
               Text ""


         DEFINE MENU QUITS OF THIS.FILE;
             PROPERTY; 
               StatusMessage "Leave Kenserve Integrated System.",;
               Text "Exit",;
               ShortCut "F8",;
               OnClick CLASS::QUITALL
               

   DEFINE MENU ORDER OF THIS;
       PROPERTY;
         Text "Transfer"

         DEFINE MENU VIEWEDIT OF THIS.ORDER;
             PROPERTY;
               OnClick CLASS::VIEWEDITONCLICK,;
               Text "&Edit",;
               Shortcut "Ctrl-E",;
               StatusMessage "Edit data."

         DEFINE MENU SEPARATOR1 OF THIS.ORDER;
             PROPERTY;
               Separator .T.,;
               Text ""

         DEFINE MENU ADDORDER OF THIS.ORDER;
             PROPERTY;
               OnClick CLASS::ADDORDERONCLICK,;
               Text "Add - New Order",;
               Enabled .T.,;
               Shortcut "F3",;
               StatusMessage "Add a new Transfer."

      DEFINE MENU ADDLINE OF THIS.ORDER;
             PROPERTY;
               OnClick CLASS::ADDLINEONCLICK,;
               Text "Add Item",;
               Enabled .T.,;
               Shortcut "F7",;
               StatusMessage "Add a new product or service to the Transfer."
               
         DEFINE MENU DELETEORDER OF THIS.ORDER;
             PROPERTY;
               OnClick CLASS::DELETEORDERONCLICK,;
               Text "&Delete Order",;
               Enabled .F.,;
               Shortcut "Ctrl-D",;
               StatusMessage "Delete the current Transfer."
       DEFINE MENU DELETELINE OF THIS.ORDER;
             PROPERTY;
               OnClick CLASS::DELETELINEONCLICK,;
               Text "Del&ete Item",;
               Enabled .F.,;
              Shortcut "Ctrl-E",;
               StatusMessage "Delete the current product."

         DEFINE MENU SEPARATOR2 OF THIS.ORDER;
             PROPERTY;
               Separator .T.,;
               Text ""
   DEFINE MENU REPORT OF THIS;
       PROPERTY; 
         Text "Tasks"

         DEFINE MENU REPORT OF THIS.report;
       PROPERTY;
         Text "1 Save",;
         enabled .t.,;
        OnClick CLASS::F5_RTN,;
               Shortcut "F5"
        
         DEFINE MENU REPORT2 OF THIS.report;
       PROPERTY;
         Text "2. Save and Print",;
         enabled .t.,;
        OnClick CLASS::F9_RTN,;
               Shortcut "F9"
               
   ****************************************************************************
   procedure DeleteOrderOnClick

   * Delete current record.
   ****************************************************************************

   if ConfirmationMessage("Are you sure you want to delete this Transfer?",;
                          "Confirm") = YES .and. empty(torders->post_date);
                           .and. empty(TODRLINE->stock_no)
      delete  && DELETED is ON, so deleted records are still there until
              && a PACK is executed
      commit()
      refresh
      select torders3
      go bottom
      form.maxOrder = order_no
      select torders
      form.changesMade = .F.
      begintrans()
                on error DO transerr WITH ERROR(), MESSAGE(),;
  PROGRAM(), LINENO()

      if type("form.nextOrderButton") <> "U"    && (torders.wfm)
         form.prevOrderButton.OnClick()  && Move to prev record
      else
         form.vcrPrevButton.OnClick()           && (custord.wfm)
      endif
   endif

*******************************************************
  procedure DeleteLineOnClick
PRIVATE PDpcoy,PDpdiv,PDpcen,PDpsto,Pptyp,Ppcla,Ppcod,PPRQTY,;
  PRpcoy,PRpdiv,PRpcen,PRpsto
   * Delete current record.
   ****************************************************************************
     
   if ConfirmationMessage("Are you sure you want to delete this product?",;
                          "Confirm") = YES
                   select TODRLINE
      delete  && DELETED is ON, so deleted records are still there until
              && a PACK is executed
     commit()
     select torders
      form.changesMade = .F.
      begintrans()
                on error DO transerr WITH ERROR(), MESSAGE(),;
  PROGRAM(), LINENO()

      if type("form.nextOrderButton") <> "U"    && (torders.wfm)
         form.prevOrderButton.OnClick()  && Move to prev record
      else
         form.vcrPrevButton.OnClick()           && (custord.wfm)
      endif
   endif
   ****************************************************************************
   procedure ADDORDERONCLICK

   * Add new record.
   ****************************************************************************
   private addForm, newOrder, saleDateField, orderNoField, custNoField, custNo,;
           inEditMode, integrityInEffect
   
   form.CheckChanged(.T.)
   select torders3
   go bottom
   if empty(order_no) .OR. .NOT. EMPTY(POST_DATE)
 
      orderNoField = field(1)                 && Customer_n field
   *   custNoField = field(2)                  && Order_no field
      saleDateField = field(3)                && Sale_date field
       if type("form.curPage") <> "U"
         inEditMode = form.curPage.inEditMode
         integrityInEffect = .T.              && Table integrity rules are used
      else
         inEditMode = form.inEditMode
         integrityInEffect = .F.
      endif

      if .not. inEditMode
         form.ViewEdit()                      && Make sure record is editable
      else if type("form.childBrowse") <> "U" && If calling from Customer/torders
         form.childBrowse.setFocus()
      endif
      form.changesMade = .T.
      form.previousRecord = recno()
      select torders3
      go bottom
      form.maxOrder = order_no
       if empty(form.maxOrder)
      form.maxOrder = TORDERSN->order_no  && start of first operator
      endif
   
      select torders
      append blank
      orderNoField = field(1)
      newOrder = val(form.maxOrder) + 1
        local wk1,wk2
       wk1 = neworder
      if wk1 > 0 .and. wk1 < 10
      wk2 = "00000"+str(wk1,1)
      else
      if wk1 > 9 .and. wk1 < 100
      wk2 = "0000"+str(wk1,2)
      else
       if wk1 > 99 .and. wk1 < 1000
      wk2 = "000"+str(wk1,3)
      else
       if wk1 > 999 .and. wk1 < 10000
      wk2 = "00"+str(wk1,4)
      else
       if wk1 > 9999 .and. wk1 < 100000
      wk2 = "0"+str(wk1,5)
      else
      wk2 = str(wk1,6)
      endif
      endif
      endif
      endif
      endif
      
      form.select = 0
      replace order_no with wk2     && Assign new order number
       form.maxOrder = ORDER_NO
          replace shift_id with st15f->shift_id
        REPLACE SHIFT_NO WITH st15f->shift_no
        replace shift_date with st15f->shift_date
         replace order_date with FORM.PSHDATE 
      REPLACE DDE_DATE WITH DATE()
        REPLACE DDE_TIME WITH TIME()
        REPLACE DDE_USER WITH FORM.BLUSER
        replace coy with torders3->coy
        replace div with torders3->div
        replace cen with torders3->cen
        replace sto with torders3->sto
        replace despatch with torders3->despatch
        replace d_s_date with torders3->d_s_date
        replace d_s_no with torders3->d_s_no
        replace d_s_id with torders3->d_s_id
        replace offname with torders3->offname
        replace off with torders3->off
        
     select TODRLINE3
     
         L1 = "01"
         append blank
         REPLACE ORDER_NO WITH torders->ORDER_NO
      REPLACE STOCK_NO WITH "01"
        replace qty with 0
        replace x_coy with torders->coy
        replace x_div with torders->div
        replace x_cen with torders->cen
        replace x_sto with torders->sto
          replace dde_date with date()
        replace dde_time with time()
        replace dde_user with FORM.BLUSER
     
        
                   form.changesmade = .t.
   FORM.sdcen.ENABLED = .t.
   form.qtyentry.enabled = .f.
    select TODRLINE
    REFRESH
    GO BOTTOM
        select torders
        SEEK TODRLINE3->ORDER_NO
     *   flush
   FORM.sdcen.SETFOCUS()
 
   endif

   ****************************************************************************
   procedure ADDLINEONCLICK
      LOCAL L1,wk1,wk2,l1
      l1 = TODRLINE->product
 select TODRLINE
 go bottom
   form.CheckChanged(.T.)
           IF     (TODRLINE->stock_no > "00";
           .AND. TODRLINE->QTY > 0 .and. empty(torders->post_date) ;
            .or. (empty(TODRLINE->order_no) .and. empty(torders->post_date) ;
            .and. empty(TODRLINE->stock_no)))  .and. .not. TODRLINE->stock_no = "99" ;
             .and. .not. empty(torders->order_no) .OR. (EMPTY(ORDER_NO) ;
              .AND. .NOT. EMPTY(torders->ORDER_NO))

 
      form.changesMade = .T.
         select TODRLINE2
          go bottom
         L1 = val(TODRLINE2->STOCK_NO) + 1
           wk1 = l1
          if wk1 > 0 .and. wk1 < 10
      wk2 = "0"+str(wk1,1)
      else
      wk2 = str(wk1,2)
      endif
      select TODRLINE3
         append blank
         REPLACE ORDER_NO WITH torders->ORDER_NO
      REPLACE STOCK_NO WITH wk2
        replace qty with 0
        replace x_coy with torders->coy
        replace x_div with torders->div
        replace x_cen with torders->cen
        replace x_sto with torders->sto
        replace receiving with TODRLINE2->receiving
        replace coy with TODRLINE2->coy
        replace div with TODRLINE2->div
        replace cen with TODRLINE2->cen
        replace sto with TODRLINE2->sto
        replace shift_date with TODRLINE2->shift_date
        replace shift_no with TODRLINE2->shift_no
        replace shift_id with TODRLINE2->shift_id
          replace dde_date with date()
        replace dde_time with time()
        replace dde_user with FORM.BLUSER
     
              form.changesmade = .t.
   FORM.srcen.ENABLED = .t.
   SELECT TODRLINE
   REFRESH
   GO BOTTOM
   select torders
   FORM.sdcen.ENABLED = .f.
    form.qtyentry.enabled = .f.
        FORM.srcen.setfocus()
  
   endif
   
   ***************************************************************************
   procedure ViewEditOnClick
   ****************************************************************************
if .not. empty(torders->order_no)
   form.ViewEdit()
   endif

   ****************************************************************************
   procedure Exit_OnClick
   ****************************************************************************

   if type ("form.parentCustomerForm") <> "U"
      * Release parent form, which releases this child
      form.parentCustomerForm.Release()
   else
      form.Release()
   endif
Procedure f5_rtn
 form.CheckCommit(form.inEditMode)
 if    form.inEditMode
      form.ViewEdit()
      form.root.order.viewEdit.enabled = .F.
       form.root.order.ADDorder.enabled = .F.      
    form.root.order.ADDline.enabled = .F.
   endif
   
 form.qtyentry.enabled = .f.
       SELECT TORDERS
     if .not. EMPTY(ORDER_NO) .and. .not. EMPTY(ORDER_DATE) .and. .not. EMPTY(SHIFT_DATE) ;
          .and. .not. EMPTY(SHIFT_NO) .and. .not. empty(shift_id) ;
          .and. .not. EMPTY(COY) .and. .not. EMPTY(DIV) .and. ;
           .not. EMPTY(CEN) .and. .not. EMPTY(STO) .and. empty(post_date) 
   
    DO fg13pos.PRG WITH FORM.BLUSER,FORM.BLEVEL
    form.last_rtn()
    ENDIF
Procedure f9_rtn
 form.CheckCommit(form.inEditMode)
 if    form.inEditMode
      form.ViewEdit()
      form.root.order.viewEdit.enabled = .F.
      form.root.order.ADDorder.enabled = .F.      
    form.root.order.ADDline.enabled = .F.
   endif
   
 form.qtyentry.enabled = .f.
       SELECT TORDERS
     if .not. EMPTY(ORDER_NO) .and. .not. EMPTY(ORDER_DATE) .and. .not. EMPTY(SHIFT_DATE) ;
          .and. .not. EMPTY(SHIFT_NO) .and. .not. empty(shift_id) ;
          .and. .not. EMPTY(COY) .and. .not. EMPTY(DIV) .and. ;
           .not. EMPTY(CEN) .and. .not. EMPTY(STO) .and. empty(post_date) 
   
    DO fg13pos.PRG WITH FORM.BLUSER,FORM.BLEVEL
    DO FG13P.PRG
    form.last_rtn()
    ENDIF
    
 procedure OnExitALL
   
  
   ****************************************************************************
   *      form.close()  
     form.Release()
   Procedure QUITALL
            form.Release()
            QUIT     
ENDCLASS


