
******************************************************************************
*  PROGRAM:      ARMBNKS.mnu
*
*  WRITTEN BY:   W M Nyongesa
*
*  DATE:         12/93
*
*  UPDATED:      06/2015
*
*  REVISION:     $Revision:   1.58  $
*
*  VERSION:      Visual dBASE
*
*  DESCRIPTION:  This is a menu file used by ARMBNKS.wfm for
*                performing simple tasks.  It allows adding and deleting
*                records, searching for a value in the order field of the
*                current table viewed, and exiting the form in view.
*
*  PARAMETERS:   FormObj -- the form to which this menu will belong.
*
*  CALLS:        None
*
*  USAGE:        form.menuFile = "ARMBNKS.mnu"
*
*******************************************************************************
#include <Messdlg.h>

** END HEADER -- do not remove this line*
* Generated on 05/06/94
*
Parameter FormObj
NEW ARMBNKS(FormObj,"Root")
CLASS ARMBNKS(FormObj,Name) OF MENUBAR(FormObj,Name)
   this.Text = ""
   this.OnInit = {;set procedure to Sampproc.prg}

   DEFINE MENU FILE OF THIS;
       PROPERTY;
         Text "&FILE"

                  
   DEFINE MENU EXIT OF THIS.FILE;
       PROPERTY; 
          StatusMessage "Return to the Previous Menu.",;
          Text "&RETURN TO PREVIOUS MENU",;
          SHORTCUT "F4",;
          OnClick CLASS::ONEXIT
  
      
       DEFINE MENU SEPARATOR000 OF THIS.FILE;
             PROPERTY;
               Separator .T.,;
               Text ""

            
   DEFINE MENU QUITALL OF THIS.FILE;
       PROPERTY; 
          StatusMessage "Leave Kenserve System.",;
          Text "EXIT",;
          SHORTCUT "F8",;
          OnClick CLASS::ONQUITALL
 

   DEFINE MENU ORDER OF THIS;
       PROPERTY;
         Text "Banked"

         DEFINE MENU VIEWEDIT OF THIS.order;
             PROPERTY;
               OnClick CLASS::VIEWEDITONCLICK,;
               Text "&EDIT",;
               Shortcut "Ctrl-E",;
               StatusMessage "Edit data."

         DEFINE MENU SEPARATOR1 OF THIS.ORDER;
             PROPERTY;
               Separator .T.,;
                  Text ""

         DEFINE MENU ADDORDER OF THIS.order;
             PROPERTY;
               OnClick CLASS::ADDORDERONCLICK,;
               Text "ADD - New Banking",;
               Enabled .T.,;
               Shortcut "F3",;
               StatusMessage "Add Banked."

       DEFINE MENU ADDLINE OF THIS.order;
             PROPERTY;
               OnClick CLASS::ADDLINEONCLICK,;
               Text "ADD - New Item",;
               Enabled .t.,;
               Shortcut "F7",;
               StatusMessage "Add a new product, item or service to the Banked."
               
        DEFINE MENU DELETELINE OF THIS.ORDER;
             PROPERTY;
               OnClick CLASS::DELETELINEONCLICK,;
               Text "Delete IteM",;
               Enabled .F.,;
               Shortcut "Ctrl-M",;
               StatusMessage "Delete the current product."
          
         DEFINE MENU SEPARATOR2 OF THIS.ORDER;
             PROPERTY;
               Separator .T.,;
               Text ""

         
DEFINE MENU REPORT OF THIS;
       PROPERTY; 
         Text "Tasks"

   DEFINE MENU REPORT OF THIS.report;
       PROPERTY;
         Text "1. Save",;
         enabled .t.,;
        OnClick CLASS::F5_RTN,;
               Shortcut "F5"
         
  

  procedure DeleteLineOnClick
   PRIVATE Ppcoy,Ppdiv,Ppcen,Ppsto,Pptyp,Ppcla,Ppcod,PPRQTY,pamt
   * Delete current record.
   ****************************************************************************
      select ARMBNKLN
   if ConfirmationMessage("Are you sure you want to delete this Item?",;
                          "Confirm") = YES .AND. EMPTY(ARMBNKS->post_date) ;
                           .and. .not. eof()
            
     select ARMBNKLN
            
             pamt = total
      delete  && DELETED is ON, so deleted records are still there until
              && a PACK is executed
              select ARMBNKS
              replace ARMBNKS->items with ARMBNKS->items - 1
              replace total with total - pamt
              IF ARMBNKS->ITEMS = 0
              REPLACE ARMBNKS->TOTAL WITH 0
    
              ENDIF
           SELECT ARMBNKS
              
      commit()
      form.changesMade = .F.
      begintrans()
           on error DO transerr WITH ERROR(), MESSAGE(),;
  PROGRAM(), LINENO()
   endif
   SELECT ARMBNKLN
   IF .NOT. EOF() .and. .not. bof()
     FORM.BROWSECHANGESMADE()
     ELSE
     SELECT ARMBNKS
      replace ARMBNKS->total with 0
   replace ARMBNKS->items with 0
 ENDIF
   SELECT ARMBNKS
   ****************************************************************************
   procedure ADDORDERONCLICK

   * Add new record.
   ****************************************************************************
   private addForm, newOrder, saleDateField, orderNoField, custNoField, custNo,;
           inEditMode, integrityInEffect,CustTyp,pdate1,pvatp
   form.CheckChanged(.T.)
                           pdate1 = FORM.PSHIFTDATE
  
      orderNoField = field(1)                 && order_no field
          OrderDateField = field(7)                && Order_date field
         select ARMBNKS3
         go bottom
      IF empty(order_no) .or. .not. empty(Post_date) 
      if type("form.curPage") <> "U"
         inEditMode = form.curPage.inEditMode
         integrityInEffect = .T.              && Table integrity rules are used
      else
         inEditMode = form.inEditMode
         integrityInEffect = .F.
      endif

      if .not. inEditMode
         form.ViewEdit()                      && Make sure record is editable
      else if type("form.childBrowse") <> "U" && If calling from Customer/ARMBNKS
         form.childBrowse.setFocus()
      endif
      form.changesMade = .T.
        form.previousRecord = recno()
             select ARMBNKS3
    go bottom
      
    form.maxOrder = order_no
     local ls1,ls2,ls3,ls4,ls5
          
      SELECT ARMBNKS
     
       if empty(form.maxOrder)
      form.maxOrder = ARMBNKSn->order_no  && start of first operator
      endif
      append blank
      orderNoField = field(1)
      newOrder = val(form.maxOrder) + 1
      local wk1,wk2
       wk1 = neworder
      if wk1 > 0 .and. wk1 < 10
      wk2 = "00000"+str(wk1,1)
      else
      if wk1 > 9 .and. wk1 < 100
      wk2 = "0000"+str(wk1,2)
      else
       if wk1 > 99 .and. wk1 < 1000
      wk2 = "000"+str(wk1,3)
      else
       if wk1 > 999 .and. wk1 < 10000
      wk2 = "00"+str(wk1,4)
      else
       if wk1 > 9999 .and. wk1 < 100000
      wk2 = "0"+str(wk1,5)
      else
      wk2 = str(wk1,6)
      endif
      endif
      endif
      endif
      endif
     replace order_no with wk2     && Assign new order number
      replace items with 1
       replace  total with 0
       replace order_date with  pdate1
    *   replace pay_method with ARMBNKS3->pay_method
     *  replace bname with ARMBNKS3->bname
     *  replace bcoy with ARMBNKS3->bcoy
     *  replace bdiv with ARMBNKS3->bdiv
     *  replace bcen with ARMBNKS3->bcen
     *  replace bsto with ARMBNKS3->bsto
     *  replace btyp with ARMBNKS3->btyp
     *  replace bcla with ARMBNKS3->bcla
     *  replace bcod with ARMBNKS3->bcod
          replace PAY_METHOD WITH 'M-Withdrcash'
          REPLACE PAYTYPE WITH 'M-MONEY'
          
         replace bcoy with "1"
       replace bdiv with "5"
       replace bcen with "1"
       replace bsto with "A1"
        REPLACE SHIFTNO WITH FORM.PSHIFTNO
        REPLACE SHIFTID WITH FORM.PSHIFTID
       if order_date = ARMBNKS3->order_date .and. shiftno = ARMBNKS3->shiftno ;
        .and. shiftid = ARMBNKS3->shiftid
   
            REPLACE OFF WITH ARMBNKS3->OFF
        REPLACE CASHIER_NO WITH ARMBNKS3->CASHIER_NO
        REPLACE ANAME WITH ARMBNKS3->ANAME
        replace btyp with ARMBNKS3->Btyp
         replace bcla with ARMBNKS3->Bcla
         replace bcod with ARMBNKS3->Bcod
         replace bname with ARMBNKS3->Bname
        
          endif
          select ARMBNKS
        REPLACE DDE_DATE WITH DATE()
        REPLACE DDE_TIME WITH TIME()
        REPLACE DDE_USER WITH FORM.BLUSER
        replace recdate with order_date
      select ARMBNKLN3
     append blank
     replace order_no with ARMBNKS->order_no
     replace stock_no with "01"
      replace order_date with ARMBNKS->order_date
      
        replace total with 0
        REPLACE DDE_DATE WITH DATE()
        REPLACE DDE_TIME WITH TIME()
        REPLACE DDE_USER WITH FORM.BLUSER
      
     select ARMBNKLN
     refresh
     go bottom
            
    select ARMBNKSL
    replace order_no with ARMBNKS->order_no
    replace order_date with ARMBNKS->order_date
     
    select ARMBNKS
    seek ARMBNKSl->order_no
         replace bcoy with "1"
         if empty(shiftno)
          REPLACE SHIFTNO WITH FORM.PSHIFTNO
          endif
          if empty(shiftid)
        REPLACE SHIFTID WITH FORM.PSHIFTID
        endif
     
       replace bdiv with "5"
       replace bcen with "1"
       replace bsto with "A1"
          replace bcoy with "1"
       replace bdiv with "5"
       replace bcen with "1"
       replace bsto with "A1"
         replace PAY_METHOD WITH 'M-Withdrcash'
        form.soff.enabled = .t.
        select ARMBNKS
          REPLACE SHIFTNO WITH FORM.PSHIFTNO
        REPLACE SHIFTID WITH FORM.PSHIFTID
        if fgcoy->pospost = "Yes"
         form.sserial.setfocus()
         else
         form.sdate.enabled = .t.
         form.sdate.setfocus()
         endif
   
   endif
   
   ****************************************************************************
   procedure ADDLINEONCLICK
      LOCAL L1,wk1,wk2,l2,l3,l4,ls3,ls4,ls5,LNAME
 
   form.CheckChanged(.T.)
                          select ARMBNKS3
                          go bottom
                             select ARMBNKLN2
        go bottom
     
         if (stock_no > "00" .and. .not. total = 0 ;
           .and. .not. empty(ARMBNKS->order_no)) .or. ;
            (.not. empty(ARMBNKS->order_no) .and. empty(order_no))

      form.changesMade = .T.
         L1 = val(STOCK_NO) + 1
         wk1 = l1
         if wk1 > 99
         quit
         endif
          if wk1 > 0 .and. wk1 < 10
      wk2 = "0"+str(wk1,1)
      else
      wk2 = str(wk1,2)
      endif
      if val(wk2) < 2
      
      select ARMBNKLN3
         append blank
         replace order_no with ARMBNKS->order_no
      replace stock_no with wk2
            replace order_date with ARMBNKS->order_date
       replace total with 0
         REPLACE DDE_DATE WITH DATE()
        REPLACE DDE_TIME WITH TIME()
        REPLACE DDE_USER WITH FORM.BLUSER
    
          
           select ARMBNKLN
           refresh
           go bottom
            
          select ARMBNKS
  
        replace items with items + 1
         REPLACE SHIFTNO WITH FORM.PSHIFTNO
        REPLACE SHIFTID WITH FORM.PSHIFTID
     REPLACE ORDER_DATE WITH FORM.PSHIFTDATE
      if .not. (order_date = ARMBNKS3->order_date .and. shiftno = ARMBNKS3->shiftno ;
        .and. shiftid = ARMBNKS3->shiftid)
          REPLACE OFF WITH ""
        REPLACE CASHIER_NO with ""
        REPLACE ANAME WITH ""
        REPLACE BTYP WITH ""
        REPLACE BNAME WITH ""
        REPLACE BCLA WITH ""
        REPLACE BCOD WITH ""
        endif
        
           FORM.sdrawer.setfocus()
  
   endif
   endif
   
   ***************************************************************************
   procedure ViewEditOnClick
   ****************************************************************************
if .not. empty(ARMBNKS->order_no)
   form.ViewEdit()
   endif

   ****************************************************************************
   procedure Exit_OnClick
   ****************************************************************************
FORM.OKEXIT = .T.
       form.Release()
procedure f1_rtn
   do ARMBNKSd.prg
Procedure F9_rtn
   local lerr
 form.CheckCommit(form.inEditMode)
form.BrowseOnNavigate()
if    form.inEditMode
      form.ViewEdit()
      form.root.order.viewEdit.enabled = .F.
   endif
    form.root.order.ADDorder.enabled = .f.      
    form.root.order.ADDline.enabled = .f.
   
   
   form.SDTOTAL.enabled = .f.
   lerr = .t.
  if .not. (ARMBNKS->total = 0 .and. ARMBNKLN->total = 0) .AND. EMPTY(post_date) ;
 .AND. ARMBNKS->PAY_METHOD = 'M-Withdrcash'   .AND. ARMBNKS->PAYTYPE = "M-MONEY" ;
      .AND. .NOT. EMPTY(ARMBNKS->BCOY) .AND. .NOT. EMPTY(ARMBNKS->BDIV) .AND.;
      .NOT. EMPTY(ARMBNKS->BCEN)  .and. .not. empty(serialno);
       .AND. .NOT. EMPTY(ARMBNKS->BSTO) .AND.;
       .NOT. EMPTY(ARMBNKS->BTYP) .AND. .NOT. EMPTY(ARMBNKS->BCLA);
       .AND. .NOT. EMPTY(ARMBNKS->BCOD)  .and. .not. empty(ARMBNKS->off);
       .and. .not. empty(ARMBNKS->cashier_no) ;
        .and. .not. empty(ARMBNKS->shiftno) .and. .not. empty(ARMBNKS->shiftid) ;
        .and. .not. EMPTY(ARMBNKLN->typ) .and. .not. EMPTY(ARMBNKLN->coy) .and. .not. EMPTY(ARMBNKLN->sto) 
       lerr = .f.
       endif
       
 if .not. lerr
 do ar30mpft.prg WITH FORM.BLUSER,FORM.BLEVEL
 
do ARMBNKSp.prg
form.Go_Top()
endif

Procedure F5_rtn
  local lerr
 form.CheckCommit(form.inEditMode)
form.BrowseOnNavigate()
if    form.inEditMode
      form.ViewEdit()
      form.root.order.viewEdit.enabled = .F.
   endif
    form.root.order.ADDorder.enabled = .f.      
    form.root.order.ADDline.enabled = .f.
   
   form.SDTOTAL.enabled = .f.
   lerr = .t.
 if .not. (ARMBNKS->total = 0 .and. ARMBNKLN->total = 0) .AND. EMPTY(post_date) ;
 .AND. ARMBNKS->PAY_METHOD = 'M-Withdrcash'   .AND. ARMBNKS->PAYTYPE = "M-MONEY" ;
      .AND. .NOT. EMPTY(ARMBNKS->BCOY) .AND. .NOT. EMPTY(ARMBNKS->BDIV) .AND.;
      .NOT. EMPTY(ARMBNKS->BCEN)  .and. .not. empty(serialno);
       .AND. .NOT. EMPTY(ARMBNKS->BSTO) .AND.;
       .NOT. EMPTY(ARMBNKS->BTYP) .AND. .NOT. EMPTY(ARMBNKS->BCLA);
       .AND. .NOT. EMPTY(ARMBNKS->BCOD)  .and. .not. empty(ARMBNKS->off);
       .and. .not. empty(ARMBNKS->cashier_no) ;
        .and. .not. empty(ARMBNKS->shiftno) .and. .not. empty(ARMBNKS->shiftid);
        .and. .not. EMPTY(ARMBNKLN->typ) .and. .not. EMPTY(ARMBNKLN->coy) .and. .not. EMPTY(ARMBNKLN->sto) 
lerr = .f.
endif
 FORM.CHANGESMADE = .T.
 if .not. lerr
 do ar30mpft.prg WITH FORM.BLUSER,FORM.BLEVEL
 form.Go_Top()
 endif

   procedure OnExit
   
  
   ****************************************************************************
   
     form.Release()

    procedure OnQuitAll
   
     form.Release()

 quit


 
ENDCLASS

         