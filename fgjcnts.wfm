////////////////////////////////////////////////////////////////////////////////
// Output Filename: C:\KENSERVICE\IDSSYS\FGJCNTS_FCV.WFM                      //
// Created By:      dBASE Form Converter Wizard                               //
// Created On:      Sunday October 3, 2021 At 11:47:07                        //
// Object Count:    60                                                        //
////////////////////////////////////////////////////////////////////////////////
                                                                                                                  *******************************************************************************
*  PROGRAM:      Fgjcnts.WFM
*
*  WRITTEN BY:   W Nyongesa
*  DATE:         10/2003
*
*  UPDATED:      04/2015
*
*  REVISION:     $Revision:   1.97  $
*
*  VERSION:      Visual dBASE
*
*  DESCRIPTION:  This form displays information about an order from a company.
*                It allows traversing through Fgjcnts and going to the top and
*                bottom.  This form also has a corresponding menu, OrdCust.mnu,
*                which allows adding,deleting and searching for an order.
*                When an unknown customer number is entered, a dialog will come
*                up asking you if you want to add a new customer.  If you
*                selecte the Yes button, the customer form (in stcusj.Wfm)
*                will be opened, so a new customer can be added.
*
*  PARAMETERS:   None
*
*  CALLS:        Fgjcnts.mnu       (Menu file)
*                Buttons.cc       (Custom controls file)
*                stcusj.Wfm     (Form for displaying customer information)
*                Fgjcnts.qbe       (View of tables)
*
*  USAGE:        DO Fgjcnts.WFM    && Note that you can also DO stcusj.Wfm
*
*******************************************************************************
#include <Messdlg.h>
shell(.F.)
create session
set talk off
*ET DESIGN OFF
*f .not. FORM.BLUSER = "WYCLIFFE"
_app.FrameWin.Visible = .F.
set design off
*NDIF
_app.FrameWin.Text = "Fgjcnts"
set ldCheck off                        && To avoid language driver conflicts
*SET DBTYPE TO PARADOX
SET CUAENTER OFF
SET CENTURY ON
SET DATE TO BRITISH
** END HEADER -- do not remove this line*
* Generated on 31/03/2021
*
parameter bUser,bLevel,bModal
local f
f = new FgjcntsFORM()
if (bModal)
   f.mdi = .F. && ensure not MDI
   f.ReadModal()
else
   f.Open()
endif
CLASS FgjcntsFORM OF FORM
   Set Procedure To BUTTONS.CC additive
   this.Metric = 6  // Pixels
   this.MenuFile = "FGJCNTS.MNU"
   this.Top = 3
   this.ColorNormal = "n+"
   this.OnClose = CLASS::ONCLOSE
   this.MousePointer = 1
   this.Left = 0
   this.Text = "REVERSE JOB CARDS (CURRENT SHIFT) -- View Mode"
   this.Moveable = .F.
   this.CanClose = CLASS::FORM_CANCLOSE
   this.Sizeable = .F.
   this.WindowState = 2
   this.Maximize = .F.
   this.Minimize = .F.
   this.MDI = .F.
   this.EscExit = .F.
   this.Height = 303
   this.View = "Fgjcnts.QBE"
   this.Width = 446

   DEFINE TEXTLABEL TEXT9 OF THIS;
       PROPERTY;
         ColorNormal "R+/W",;
         Text "Seq. No.:",;
       BorderStyle 7,;
         FontSize 12,;
         FontName "Verdana",;
         Height 21,;
         Width 96,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD ORDERNOENTRY OF THIS;
       PROPERTY;
         Enabled .F.,;
         ColorNormal "R+/W",;
         Left 108,;
         FontSize 12,;
         FontName "MS Sans Serig",;
         DataLink "Fgjcnts->ORDER_NO",;
         Height 21,;
         ColorHighLight "GB+/W",;
         Width 84,;
       FontBold .T.

   DEFINE TEXTLABEL TEXT2 OF THIS;
       PROPERTY;
         ColorNormal "R+/W",;
         Left 192,;
         Text "Date:",;
       BorderStyle 7,;
         FontSize 12,;
         FontName "Verdana",;
         Height 25,;
         Width 60,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE SPINBOX SDATE OF THIS;
       PROPERTY;
         Enabled .F.,;
         ColorNormal "R+/W",;
         Rangemin {30/11/2012},;
         Rangemax {10/03/2013},;
         Left 252,;
         ValidErrorMsg "Date out of Range",;
         FontSize 12,;
         DataLink "Fgjcnts->order_date",;
         Height 21,;
         ColorHighLight "W+/N",;
         Width 120,;
       FontName "MS Sans Serif",;
       FontBold .T.

   DEFINE TEXTLABEL TEXT8 OF THIS;
       PROPERTY;
         Top 26,;
         ColorNormal "0x400000/W",;
         Text "Officer:",;
       BorderStyle 7,;
         FontSize 12,;
         FontName "Verdana",;
         Height 21,;
         Width 96,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE COMBOBOX SEMP1 OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 26,;
         ColorNormal "0xc08000/W",;
         MousePointer 1,;
         Left 108,;
         Style 1,;
         DataSource "FIELD FGOFFS->NAME",;
         OnChange CLASS::SEMP1_ONCHANGE,;
         FontSize 12,;
         DataLink "Fgjcnts->CASHNAME",;
         Height 28,;
         Width 192,;
       FontName "MS Sans Serif",;
       FontBold .T.

   DEFINE TEXTLABEL TEXT18 OF THIS;
       PROPERTY;
         Top 26,;
         ColorNormal "0x400000/W",;
         Left 312,;
         Text "J/C No.:",;
       BorderStyle 7,;
         FontSize 12,;
         FontName "Verdana",;
         Height 24,;
         Width 96,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD SSERIAL OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 26,;
         ColorNormal "B/BTNFACE",;
         Left 420,;
         FontSize 12,;
         FontName "MS Sans Serig",;
         DataLink "Fgjcnts->SERIALNO",;
         Height 22,;
         ColorHighLight "W+/B",;
         Width 108,;
       FontBold .T.

   DEFINE TEXTLABEL TEXT28 OF THIS;
       PROPERTY;
         Top 26,;
         ColorNormal "0x400000/W",;
         Left 528,;
         Text "Veh.:",;
       BorderStyle 7,;
         FontSize 12,;
         FontName "Verdana",;
         Height 24,;
         Width 72,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD SVEH OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 26,;
         ColorNormal "B/BTNFACE",;
         Left 600,;
         FontSize 12,;
         Function "!",;
         DataLink "Fgjcnts->REG",;
         Height 24,;
         ColorHighLight "W+/B",;
         Width 120,;
       FontName "MS Sans Serif",;
       FontBold .T.

   DEFINE TEXTLABEL TEXT1 OF THIS;
       PROPERTY;
         Top 55,;
         ColorNormal "0x400000/W",;
         Text "Client:",;
       BorderStyle 7,;
         FontSize 12,;
         FontName "Verdana",;
         Height 24,;
         Width 72,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD SFRIGHTER OF THIS;
       PROPERTY;
         Enabled .F.,;
         TabStop .F.,;
         Top 55,;
         ColorNormal "B/BTNFACE",;
         Left 84,;
         FontSize 12,;
         Function "!",;
         DataLink "Fgjcnts->CUSTOMER",;
         Height 24,;
         ColorHighLight "W+/B",;
         Width 216,;
       FontName "MS Sans Serif",;
       FontBold .T.

   DEFINE TEXTLABEL TEXT10 OF THIS;
       PROPERTY;
         Top 434,;
         ColorNormal "W+/B+",;
         Text "Available Qty",;
       BorderStyle 7,;
         FontSize 11,;
         FontName "Verdana",;
         Height 27,;
         Width 132,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD SONHAND OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 434,;
         ColorNormal "W+/B+",;
         Picture "9999,999.99",;
         Left 144,;
         FontSize 11,;
         FontName "arial",;
         DataLink "fgmast2->on_hand",;
         Height 27,;
         ColorHighLight "B+/W+",;
         Width 108,;
       FontBold .T.

   DEFINE TEXTLABEL TEXT6 OF THIS;
       PROPERTY;
         Top 213,;
         ColorNormal "0x400000/W",;
         Left 300,;
         Text "Cashier:",;
       BorderStyle 7,;
         FontSize 12,;
         FontName "Verdana",;
         Height 24,;
         Width 84,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE COMBOBOX SCASHIER OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 213,;
         ColorNormal "0xc08000/W",;
         MousePointer 1,;
         Left 384,;
         Style 1,;
         DataSource "FIELD FGOFFS3->NAME",;
         OnChange CLASS::SCASHIER_ONCHANGE,;
         FontSize 12,;
         DataLink "Fgjcnlin->OFFNAME",;
         Height 28,;
         Width 204,;
       FontName "MS Sans Serif",;
       FontBold .T.

   DEFINE TEXTLABEL STINV OF THIS;
       PROPERTY;
         Top 241,;
         ColorNormal "N/W",;
         Text "Item/Cen:",;
       BorderStyle 7,;
         FontSize 10,;
         FontName "Verdana",;
         Height 21,;
         Width 96,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE COMBOBOX SPROD OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 241,;
         ColorNormal "0x400040/W+",;
         MousePointer 1,;
         Left 216,;
         Style 1,;
         DataSource "FIELD FGMASTP->name",;
         FontBold .F.,;
         OnChange CLASS::SPROD_ONCHANGE,;
         FontSize 10,;
         DataLink "Fgjcnlin->name",;
         Height 24,;
         Width 504,;
       FontName "MS Sans Serif"

   DEFINE TEXTLABEL TEXT3 OF THIS;
       PROPERTY;
         Top 298,;
         ColorNormal "N/W",;
         Text "No.",;
       BorderStyle 7,;
         FontSize 10,;
         FontName "Verdana",;
         Height 25,;
         Width 30,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD SITEM OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 328,;
         ColorNormal "0x400000/0xffff80",;
         Left 2,;
         FontSize 10,;
         FontName "arial",;
         DataLink "Fgjcnlin->STOCK_NO",;
         Height 25,;
         ColorHighLight "0x40/W",;
         Width 22,;
       FontBold .T.

   DEFINE TEXTLABEL TEXT12 OF THIS;
       PROPERTY;
         Top 298,;
         ColorNormal "N/W",;
         Left 30,;
         Text "Qty",;
       BorderStyle 7,;
         FontSize 10,;
         FontName "Verdana",;
         Height 25,;
         Width 108,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD QTYENTRY OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 328,;
         ColorNormal "N/BtnFace",;
         Picture "999,999,999.99",;
         Left 24,;
         ValidErrorMsg "Quantity Must Be Greater Than Zero",;
         OnChange CLASS::QTYENTRY_ONCHANGE,;
         FontSize 10,;
         DataLink "Fgjcnlin->QTY",;
         Height 25,;
         ColorHighLight "W+/N+",;
         Width 114,;
       FontName "MS Sans Serif",;
       FontBold .T.

   DEFINE TEXTLABEL TEXT13 OF THIS;
       PROPERTY;
         Top 298,;
         ColorNormal "N/W",;
         Left 144,;
         Text "Price",;
       BorderStyle 7,;
         FontSize 10,;
         FontName "Verdana",;
         Height 25,;
         Width 84,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD SPRICE OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 328,;
         ColorNormal "N/BtnFace",;
         Picture "999,999.99",;
         Left 138,;
         FontSize 10,;
         DataLink "Fgjcnlin->SELL_PRICE",;
         Height 25,;
         ColorHighLight "W+/N+",;
         Width 90,;
       FontName "MS Sans Serif",;
       FontBold .T.

   DEFINE TEXTLABEL TEXT5 OF THIS;
       PROPERTY;
         Top 298,;
         ColorNormal "N/W",;
         Left 228,;
         Text "Amount",;
       BorderStyle 7,;
         FontSize 10,;
         FontName "Verdana",;
         Height 25,;
         Width 132,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD AMTENTRY OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 328,;
         ColorNormal "N/BtnFace",;
         Picture "9,999,999,999.99",;
         Left 228,;
         OnChange CLASS::AMTENTRY_ONCHANGE,;
         FontSize 10,;
         DataLink "Fgjcnlin->TOTAL_AMT",;
         Height 25,;
         ColorHighLight "W+/N+",;
         Width 132,;
       FontName "MS Sans Serif",;
       FontBold .T.

   DEFINE TEXTLABEL TEXT14 OF THIS;
       PROPERTY;
         Top 298,;
         ColorNormal "N/W",;
         Left 450,;
         Text "Gross Amt",;
       BorderStyle 7,;
         FontSize 10,;
         FontName "Verdana",;
         Height 25,;
         Width 132,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD SGROSS OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 328,;
         ColorNormal "0x400000/GB+",;
         Picture "9,999,999,999.99",;
         Left 450,;
         FontSize 10,;
         DataLink "Fgjcnlin->GROSS_AMT",;
         Height 25,;
         ColorHighLight "0x40/W",;
         Width 132,;
       FontName "MS Sans Serif",;
       FontBold .T.

   DEFINE TEXTLABEL TEXT20 OF THIS;
       PROPERTY;
         Top 298,;
         ColorNormal "N/W",;
         Left 582,;
         Text "TAX",;
       BorderStyle 7,;
         FontSize 10,;
         FontName "Verdana",;
         Height 25,;
         Width 96,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD SVATOUT OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 328,;
         ColorNormal "0x400000/GB+",;
         Picture "9999,999.99",;
         Left 582,;
         FontSize 10,;
         DataLink "Fgjcnlin->VAT_OUT",;
         Height 25,;
         ColorHighLight "0x40/W",;
         Width 96,;
       FontName "MS Sans Serif",;
       FontBold .T.

   DEFINE TEXTLABEL TEXT21 OF THIS;
       PROPERTY;
         Top 298,;
         ColorNormal "N/W",;
         Left 678,;
         Text "TOTAL",;
       BorderStyle 7,;
         FontSize 10,;
         FontName "Verdana",;
         Height 25,;
         Width 138,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD SNET OF THIS;
       PROPERTY;
         Enabled .F.,;
         TabStop .F.,;
         Top 328,;
         ColorNormal "0x400000/GB+",;
         Picture "9,999,999,999.99",;
         Left 678,;
         OnChange CLASS::SNET_ONCHANGE,;
         FontSize 10,;
         DataLink "Fgjcnlin->TOTAL",;
         Height 25,;
         ColorHighLight "0x40/W",;
         Width 138,;
       FontName "MS Sans Serif",;
       FontBold .T.

   DEFINE ENTRYFIELD SVAT OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 396,;
         ColorNormal "0x400000/0xffff80",;
         Picture "999.99",;
         Left 312,;
         FontSize 10,;
         FontName "arial",;
         DataLink "Fgjcnlin->VAT",;
         Height 25,;
         ColorHighLight "0x40/W",;
         Width 48,;
       FontBold .T.

   DEFINE PUSHBUTTON FIRSTORDERBUTTON OF THIS;
       PROPERTY;
         Top 493,;
         ColorNormal "0x40/W",;
         Left 18,;
         Group .F.,;
         Text "First",;
         OnClick CLASS::GO_TOP,;
         FontSize 12,;
         Height 26,;
         Width 120,;
       FontName "MS Sans Serif",;
       FontBold .T.

   DEFINE PUSHBUTTON LASTORDERBUTTON OF THIS;
       PROPERTY;
         Top 493,;
         ColorNormal "0x40/W",;
         Left 168,;
         Group .F.,;
         Text "Last",;
         OnClick CLASS::GO_LAST,;
         FontSize 12,;
         Height 26,;
         Width 120,;
       FontName "MS Sans Serif",;
       FontBold .T.

   DEFINE PREVBUTTON PREVORDERBUTTON OF THIS;
       PROPERTY;
         Top 493,;
         ColorNormal "0x40/W",;
         Left 318,;
         Group .T.,;
         Text "Previous",;
         OnClick CLASS::PREVIOUS,;
         FontSize 12,;
         Height 26,;
         Width 120,;
       FontName "MS Sans Serif",;
       FontBold .T.

   DEFINE NEXTBUTTON NEXTORDERBUTTON OF THIS;
       PROPERTY;
         Top 493,;
         ColorNormal "0x40/W",;
         Left 468,;
         Group .F.,;
         Text "Next",;
         Default .T.,;
         OnClick CLASS::NEXT,;
         FontSize 12,;
         Height 26,;
         Width 120,;
       FontName "MS Sans Serif",;
       FontBold .T.

   DEFINE BROWSE CHILDBROWSE OF THIS;
       PROPERTY;
         ShowRecNo .F.,;
         Delete .F.,;
         Top 85,;
         Append .F.,;
         ColorNormal "R/W",;
         ShowDeleted .F.,;
         CUATab .T.,;
         Text "DETAIL LINES",;
         Fields 'Fgjcnlin->STOCK_NO\H="No"\4\P="99"\R,Fgjcnlin->PRODNAME\H="Description"\25\R,cens = Fgjcnlin->div+Fgjcnlin->cen+Fgjcnlin->sto\H="Cen"\5,Fgjcnlin->QTY\H="Qty"\8\P="999,999.99"\R,Fgjcnlin->SELL_PRICE\H="Price"\11\P="9999,999.99"\R,Fgjcnlin->TOTAL_AMT\H="Basic"\12\P="9999,999,999.99"\R,FGJCNLIN->DISCOUNT\H="Disc"\8\P="9999,999.99"\R,FGJCNLIN->GROSS_AMT\H="Gross"\12\P="9999,999,999.99"\R,Fgjcnlin->VAT_OUT\H="VAT Out"\10\P="9999,999.99"\R,Fgjcnlin->TOTAL\H="Nett Amt"\12\P="99999,999,999.99"\R,shiftsd = dtos(Fgjcnlin->SHIFT_DATE)+" "+Fgjcnlin->shift_no+Fgjcnlin->shift_id\H="Shift Info"\10',;
         Modify .F.,;
         Alias "Fgjcnlin",;
         FontSize 9,;
         ScrollBar 1,;
         Height 119,;
         Width 840,;
         ColorHighLight "R/BTNFACE",;
       FontName "MS Sans Serif"

   DEFINE TEXTLABEL TEXT7 OF THIS;
       PROPERTY;
         Top 396,;
         ColorNormal "W+/B+",;
         Left 492,;
         Text "J/C TOTAL:",;
       BorderStyle 7,;
         FontSize 12,;
         FontName "Verdana",;
         Height 25,;
         Width 102,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD STOTAL OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 396,;
         ColorNormal "W+/B+",;
         Picture "9999,999,999.99",;
         Left 594,;
         FontSize 12,;
         FontName "arial",;
         DataLink "Fgjcnts->TOTAL",;
         Height 25,;
         ColorHighLight "B+/W+",;
         Width 126,;
       FontBold .T.

   DEFINE ENTRYFIELD TGROSS OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 396,;
         ColorNormal "0x400000/W",;
         Picture "999,999,999.99",;
         Left 96,;
         FontSize 12,;
         FontName "arial",;
         DataLink "Fgjcnts->SAMOUNT",;
         Height 25,;
         ColorHighLight "GB+/W",;
         Width 132,;
       FontBold .T.

   DEFINE ENTRYFIELD TVAT OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 396,;
         ColorNormal "0x400000/W",;
         Picture "9999,999,999.99",;
         Left 360,;
         FontSize 12,;
         FontName "arial",;
         DataLink "Fgjcnts->VAT",;
         Height 25,;
         ColorHighLight "GB+/W",;
         Width 132,;
       FontBold .T.

   DEFINE TEXTLABEL TEXT11 OF THIS;
       PROPERTY;
         Top 396,;
         ColorNormal "0x400000/W",;
         Text "GROSS:",;
       BorderStyle 7,;
         FontSize 12,;
         FontName "Verdana",;
         Height 25,;
         Width 96,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE TEXTLABEL TEXT16 OF THIS;
       PROPERTY;
         Top 396,;
         ColorNormal "0x400000/W",;
         Left 228,;
         Text "V.A.T.",;
       BorderStyle 7,;
         FontSize 12,;
         FontName "Verdana",;
         Height 25,;
         Width 84,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE TEXTLABEL TEXT4 OF THIS;
       PROPERTY;
         Top 56,;
         ColorNormal "W+/0x408000",;
         Left 432,;
         Text "J/C TOTAL:",;
       BorderStyle 7,;
         FontSize 12,;
         FontName "Verdana",;
         Height 25,;
         Width 120,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD SREFT OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 56,;
         ColorNormal "W+/0x400000",;
         Picture "9999,999,999.99",;
         Left 558,;
         FontSize 12,;
         FontName "arial",;
         DataLink "FGTRNREF->TOTAL",;
         Height 25,;
         ColorHighLight "B+/W+",;
         Width 162,;
       FontBold .T.

   DEFINE TEXTLABEL TEXT15 OF THIS;
       PROPERTY;
         ColorNormal "0x400000/W",;
         Left 372,;
         Text "J/C Ref:",;
       BorderStyle 7,;
         FontSize 12,;
         FontName "Verdana",;
         Height 21,;
         Width 96,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE COMBOBOX SMKEYREF OF THIS;
       PROPERTY;
         Enabled .F.,;
         ColorNormal "G+/0xa00000",;
         MousePointer 1,;
         Left 480,;
         Style 1,;
         DataSource "FIELD FGTRNREF->MKEY",;
         OnChange CLASS::SMKEYREF_ONCHANGE,;
         FontSize 12,;
         DataLink "FGJCNTS->MKEYREF",;
         Height 28,;
         Width 240,;
       FontName "MS Sans Serif",;
       FontBold .T.

   DEFINE TEXTLABEL TEXT19 OF THIS;
       PROPERTY;
         Top 264,;
         ColorNormal "W+/0x408000",;
         Left 168,;
         Text "DL Basic:",;
       BorderStyle 7,;
         FontSize 10,;
         FontName "Verdana",;
         Height 26,;
         Width 72,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD SDLT OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 264,;
         ColorNormal "W+/0x400000",;
         Picture "999,999,999.99",;
         Left 240,;
         FontSize 10,;
         FontName "arial",;
         DataLink "FGJCNLIN->BAS_AMT",;
         Height 26,;
         ColorHighLight "B+/W+",;
         Width 108,;
       FontBold .T.

   DEFINE TEXTLABEL TEXT22 OF THIS;
       PROPERTY;
         Top 264,;
         ColorNormal "W+/0x408000",;
         Text "DL Qty:",;
       BorderStyle 7,;
         FontSize 10,;
         FontName "Verdana",;
         Height 26,;
         Width 54,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD SDLQ OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 264,;
         ColorNormal "W+/0x400000",;
         Picture "9999,999,999.99",;
         Left 54,;
         FontSize 10,;
         FontName "arial",;
         DataLink "FGJCNLIN->BASIC_QTY",;
         Height 26,;
         ColorHighLight "B+/W+",;
         Width 108,;
       FontBold .T.

   DEFINE TEXTLABEL TEXT23 OF THIS;
       PROPERTY;
         Top 241,;
         ColorNormal "W+/0x408000",;
         Left 96,;
         Text "DL NO:",;
       BorderStyle 7,;
         FontSize 10,;
         FontName "Verdana",;
         Height 21,;
         Width 84,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD SDL OF THIS;
       PROPERTY;
         Enabled .F.,;
         TabStop .F.,;
         Top 241,;
         ColorNormal "W+/0x400000",;
         Picture "99",;
         Left 180,;
         OnChange CLASS::SDL_ONCHANGE,;
         FontSize 10,;
         FontName "arial",;
         DataLink "fgstknos->stock_no",;
         Height 21,;
         ColorHighLight "B+/W+",;
         Width 36,;
       FontBold .T.

   DEFINE TEXTLABEL TEXT24 OF THIS;
       PROPERTY;
         Top 298,;
         ColorNormal "N/W",;
         Left 360,;
         Text "Discount",;
       BorderStyle 7,;
         FontSize 10,;
         FontName "Verdana",;
         Height 25,;
         Width 90,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD SDISC OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 328,;
         ColorNormal "N/BtnFace",;
         Picture "999,999.99",;
         Left 360,;
         FontSize 10,;
         DataLink "FGJCNLIN->DISCOUNT",;
         Height 25,;
         ColorHighLight "W+/N+",;
         Width 90,;
       FontName "MS Sans Serif",;
       FontBold .T.

   DEFINE TEXTLABEL TEXT25 OF THIS;
       PROPERTY;
         Top 264,;
         ColorNormal "W+/0x408000",;
         Left 348,;
         Text "DL Disc.:",;
       BorderStyle 7,;
         FontSize 10,;
         FontName "Verdana",;
         Height 26,;
         Width 66,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD SDLD OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 264,;
         ColorNormal "W+/0x400000",;
         Picture "99,999,999.99",;
         Left 432,;
         FontSize 10,;
         FontName "arial",;
         DataLink "FGJCNLIN->discount",;
         Height 26,;
         ColorHighLight "B+/W+",;
         Width 96,;
       FontBold .T.

   DEFINE TEXTLABEL TEXT26 OF THIS;
       PROPERTY;
         Top 264,;
         ColorNormal "W+/0x408000",;
         Left 534,;
         Text "DL Total:",;
       BorderStyle 7,;
         FontSize 10,;
         FontName "Verdana",;
         Height 26,;
         Width 72,;
       FontBold .T.,;
       AlignHorizontal 1,;
       AlignVertical 1

   DEFINE ENTRYFIELD SDELT OF THIS;
       PROPERTY;
         Enabled .F.,;
         Top 264,;
         ColorNormal "W+/0x400000",;
         Picture "9999,999,999.99",;
         Left 606,;
         FontSize 10,;
         FontName "arial",;
         DataLink "FGJCNLIN->TOTAL_COST",;
         Height 26,;
         ColorHighLight "B+/W+",;
         Width 114,;
       FontBold .T.

   procedure Open
   ****************************************************************************
   private orderNoField
      on error DO ddeerr WITH ERROR(), MESSAGE(),;
   PROGRAM(), LINENO()
     FORM.BLUSER=BUSER
   FORM.BLEVEL=BLEVEL
   IF EMPTY(FORM.BLUSER) .OR. EMPTY(FORM.BLEVEL)
      QUIT
   ENDIF
   if form.blevel = 2
   wait 'Not Permitted to Reverse'
   quit
   endif
       SET REPROCESS TO 10
     select fgjcntsn
    go top
    if eof()
    append blank
    replace order_no with "0"
    endif
    SELECT FGSTKNOS
    GO TOP
    IF EOF()
    APPEND BLANK
    ENDIF
   REPLACE STOCK_NO WITH ""
    SELECT FCCASHRS
         set order to cashier

      select fgjobcad
    set order to mkey
    select fgtrnref
    set order to mkey

    select fgjcrup
    set order to orderdate
    select fgmastp
                    set safety off
   select             Fgjcnlin3
                   set order to order_no

   set safety on
   select Fgjcnlin4
   set order to order_no
   select Fgjcnts3
   set order to order_no
   go bottom

   select FGMAST2
   set order to mkey
   select ST15F
   set order to MKEY
   select FGOFFS
   set order to name
     select FGOFFS2
   set order to name
    select FGOFFS3
   set order to name

    select Fgjcnts3
   go bottom
    form.maxOrder = order_no
   if type("form.init") = "U"
      form.init = .T.
   FORM.PSHIFTDATE = {}
   FORM.PSHIFTNO = ""
   FORM.PDIV = ""
   FORM.PCOY = ""
   FORM.OKEXIT = .F.
   FORM.PCEN = ""
    form.pcashierno = FGOFFS->cashier_no
    form.pemp1 = FGOFFS->OFF
    form.pf1name = FGOFFS->name
    FORM.PSERVED = ""
   FORM.PSTO = ""
   form.pclass = ""
   FORM.PTYP = ""
   form.pcard = "B/V"
   form.ptypname = ""
   form.pclaname = ""
   form.pcodname = ""
   form.pcod = ""
   form.pf1dr = "No"
    FORM.PCLA = ""
      set skip to                     && Fgjcnts.qbe contains set skip to Fgjcnlin
      set exact off                   && the .qbe file contains SET EXACT ON

      set procedure to Sampproc.prg additive

      form.inEditMode = .F.           && indicator of view/edit state
      form.changesMade = .F.          && indicator of changes made to field values
      form.previousRecord = .F.       && Save record number when appending
      form.pspdiv = "1"
      form.pspdivname = "Forecourt"
      *** do calculations in another area so form doesn't get updated
        select Fgjcnts
      set order to order_no
            local lmax
      select Fgjcnts
      go top
      lmax = order_no
        select Fgjcntsl
       go top
       if eof()
       append blank
       endif

    select FGCOD
    set order to MKEY

   select fgcoy
   go top
   form.pf1dr = "Yes"
     select ST15F
   go top
   form.pshdate = shift_date
   select fgcoy
   replace start_date with st15f->shift_date
   replace end_date with start_date
   form.pshno = st15f->shift_no
   form.pshid = st15f->shift_id
   form.pfc = .t.

   if .not. form.pfc  && not forecourt
      if .not. empty(Fgjcnts3->order_date)
      form.pshdate = Fgjcnts3->order_date
      select fgcoy
      replace start_date with form.pshdate
      else
      form.pshdate = fgcoy->start_date
      if empty(form.pshdate)
       InformationMessage("Check Date range for data entry in the company info file", "Sorry")

   quit
   endif
      endif
   endif
   form.PSALEDATESPIN = form.pshdate
   form.pserialno = Fgjcnts3->serialno
   SELECT FGMASTp
   SET ORDER TO NAME
     SELECT Fgjcnlin
    DELETE ALL FOR (QTY = 0 .AND. TOTAL = 0) .OR. EMPTY(ORDER_NO) .OR. EMPTY(STOCK_NO);
     .OR. EMPTY(COY) .OR. EMPTY(DIV) .OR. EMPTY(CEN) .OR. EMPTY(STO) .OR. EMPTY(TYP) .OR.;
      EMPTY(CLA) .OR. EMPTY(COD)  .or. order_no < lmax
       select Fgjcnts
       go top
         select Fgjcnts
      set relation to order_no into Fgjcnlin2 constrain integrity additive
      endif
   go top
   form::Open()

   shell(.F.)

    procedure OnClose
   ****************************************************************************
      if form.inEditMode
      form.ViewEdit()
   endif
          && Close customer form if it exists
        shell(.f.)
   close procedure SampProc.prg
    if .not. empty(FGJCNTS->order_no)
   select fgjcrup
   seek FGJCNTS->order_no+dtos(FGJCNTS->order_date)
   if found() .and. .not. empty(post_date)
   select FGJCNTS
   replace post_date with date()
   select fgtrnref
   replace post_date with date()
   endif
   endif
   commit()
   close databases
      do fgpjcNTS.prg
   close databases
   form.close()


   procedure ChangesMade

   * Indicate that changes have been made to current record.
   ****************************************************************************

   form.changesMade = .T.

   ****************************************************************************

   procedure BrowseChangesMade
   ****************************************************************************
   ****************************************************************************
   local t,t2,t3,t4
     if form.changesmade = .t.
   select Fgjcnlin
   IF .NOT. EOF()
   *  form.changesMade = .T.
     go recno("Fgjcnlin") in Fgjcnlin    && Make sure change is posted

   select Fgjcnlin2  && recalculate totals in other workarea
   calculate sum(Fgjcnlin2->total),SUM(Fgjcnlin2->DISCOUNT),SUM(Fgjcnlin2->Stotal),;
   SUM(Fgjcnlin2->vat_out) to t,T2,T3,T4
   select Fgjcnts
   replace Fgjcnts->total with t
   replace Fgjcnts->discount with t2
   replace Fgjcnts->samount with t3
   replace Fgjcnts->vat with t4
    replace Fgjcnts->total with t
    if tcash < total .and. Fgjcnts->pay_method = "Cash"
    replace tcash with total
    endif
    replace tchange with tcash - total

    if tchange < 0
    replace tchange with 0
     ENDIF
     endif
     SELECT Fgjcnts
   endif

   ****************************************************************************

   procedure AmtPaidOnChange
   ****************************************************************************

   form.changesMade = .T.
    ****************************************************************************

   procedure Next
   ****************************************************************************

   form.CheckCommit(form.inEditMode)
    if .not. empty(FGJCNTS->order_no)
   select fgjcrup
   seek FGJCNTS->order_no+dtos(FGJCNTS->order_date)
   if found() .and. .not. empty(post_date)
   select FGJCNTS
   replace post_date with date()
   select fgtrnref
   replace post_date with date()
   flush
   endif
   endif
   form.root.order.viewEdit.enabled = .t.
   form.root.order.ADDorder.enabled = .t.
    form.root.order.ADDline.enabled = .t.

   SELECT FGJCNTS
   if .not. eof()
      NEXTBUTTON::OnClick()
   endif
   form.root.file.exit.enabled =   .t.

   ****************************************************************************

   procedure Previous
   ****************************************************************************

   form.CheckCommit(form.inEditMode)
    if .not. empty(FGJCNTS->order_no)
   select fgjcrup
   seek FGJCNTS->order_no+dtos(FGJCNTS->order_date)
   if found() .and. .not. empty(post_date)
   select FGJCNTS
   replace post_date with date()
   select fgtrnref
   replace post_date with date()
   flush
   endif
   endif
   form.root.order.viewEdit.enabled = .t.
   SELECT FGJCNTS
   if .not. bof()
   PREVBUTTON::OnClick()
   endif
     form.root.file.exit.enabled =   .t.
    form.root.order.ADDorder.enabled = .t.
    form.root.order.ADDline.enabled = .t.


   procedure CheckCommit (newInEditMode)

    * Finish transaction, if it has been started.
    ****************************************************************************
    private orderField, changesMade,prcoy,prdiv,prcen,prsto,prtyp,prcla,prcod,prqty,;
    pcoy,pdiv,pcen,psto,ptyp,pcla,pcod


    changesMade = form.changesMade
     if form.changesMade
       orderField = field(1)                  && Field Order_no
            commit()
            on error DO ddeerr WITH ERROR(), MESSAGE(),;
   PROGRAM(), LINENO()
             flush
        *  clear
       if form.inEditMode .and. newInEditMode
       *   begintrans()
        *       on error DO transerr WITH ERROR(), MESSAGE(),;
   PROGRAM(), LINENO()
       endif
       form.changesMade = .F.
    endif


    if form.inEditMode <> newInEditMode
       if newInEditMode                       && Going to Edit mode
       *   begintrans()
       *     on error DO transerr WITH ERROR(), MESSAGE(),;
   PROGRAM(), LINENO()
       else                                   && Going to View mode
          if .not. changesMade
             rollback()
            on error   DO ddeerr WITH ERROR(), MESSAGE(),;
   PROGRAM(), LINENO()
          endif
       endif
       form.inEditMode = newInEditMode
    endif

      select fgcoy
      flush

    select Fgjcnts
    ****************************************************************************

   procedure ViewEdit
   ****************************************************************************
   local inEditMode, control, editMenu

   editMenu = form.root.ORDER.viewEdit
   *** If editing is completed, close transaction, otherwise open a transaction
   if form.inEditMode                           && Change to View mode
      form.checkChanged(.F.)
      editMenu.text = "&Edit"
      editMenu.shortcut = "Ctrl-E"
      editMenu.statusMessage = "Edit data."
      form.root.order.deleteline.enabled = .F.
      form.CheckCommit(.F.)                     && Check transaction and
      form.text = "REVERSE JOB CARDS (CURRENT SHIFT) -- View Mode"         && change mode to View
      form.childBrowse.modify = .F.
      form.statusMessage = "Select CREDIT NOTE - Edit menu choice to " +;
                           "edit/delete data."
   else                                         && Change to Edit mode
      editMenu.text = "&View"
      editMenu.shortcut = "Ctrl-E"
      editMenu.statusMessage = "View data."
        form.root.order.deleteline.enabled = .t.
       form.CheckCommit(.T.)                     && Check transaction and
      form.text = "REVERSE JOB CARDS (CURRENT SHIFT) -- Edit Mode"         && change mode to Edit
      form.childBrowse.modify = .F.
      form.statusMessage = "In Edit Mode.  " +;
                           "Select CREDIT NOTE - View menu choice to switch " +;
                           "to View mode."


   endif

   control = form.first

   inEditMode = form.inEditMode    && so don't have to reference many times
   do
      do case
         case control.name $ "ORDERNOENTRY,cno,TOTINVENTRY,BALDUEENTRY"
            * these are never editable
            control.enabled = .F.
         case .not. control.className $ "BROWSE,NEXTBUTTON,PREVBUTTON,PUSHBUTTON,IMAGE,TEXT"
            * doesn't make sense to make the above classes enabled/not
            control.enabled = inEditMode
         case control.className = "BROWSE"
            control.Modify = inEditMode
            control.Delete = inEditMode
            control.Append = inEditMode
      endcase
      control = control.before
   until control.name = form.first.name
   form.OrderNoEntry.enabled = .F.          && Key field is always disabled
   form.childBrowse.modify = .F.
   form.childBrowse.append = .F.
   form.tgross.enabled = .f.
   form.childBrowse.delete = .F.
   form.tvat.enabled = .f.
   form.sgross.enabled  = .f.
   form.stotal.enabled = .f.
   FORM.CHILDBROWSE.MODIFY = .F.
   FORM.STOTAL.ENABLED = .F.
   form.sitem.enabled = .f.
    if fgcoy->pospost = "Yes"
   FORM.SDATE.ENABLED = .F.
   endif
   FORM.SVAT.ENABLED = .F.
   FORM.SDELT.ENABLED = .F.
   if fgcoy->stream = "Yes"
           form.sprice.enabled = .f.
           endif
     if FGCOD->qty = "Yes" .and. .not. FGCOD->shs_auto = "Yes" .and. .not. FGCOD->typ = "00"
              form.qtyentry.enabled = .t.
               FORM.AMTENTRY.ENABLED = .F.
              else
             form.qtyentry.enabled = .f.
             FORM.AMTENTRY.ENABLED = .T.
               endif

   form.sonhand.enabled = .f.
   FORM.SNET.ENABLED = .F.
   FORM.SVATOUT.ENABLED = .F.

   FORM.Sdlt.ENABLED = .F.
   FORM.SFRIGHTER.ENABLED = .F.
   FORM.SVEH.ENABLED = .F.
   FORM.Sdlq.ENABLED = .F.
   form.sreft.enabled = .f.
   FORM.Sserial.ENABLED = .F.
   if (empty(Fgjcnlin->order_no) .and. .not. empty(fgjcnts->order_no)) .or. empty(fgjcnts->mkeyref)
   form.smkeyref.enabled = .t.
   else
    form.smkeyref.enabled = .f.
   endif
   form.sdisc.enabled = .f.
   form.sdld.enabled = .f.

   procedure CheckChanged(callCommit)

   private control, fieldValue, controlValue, typeText, typeValue

   if form.inEditMode
      control = form.activeControl
      if type("control.datalink") <> "U"
         fieldValue = control.datalink          && name of table field

         typeText = type("control.text")
         typeValue = type("control.value")
         do case
            case typeValue = "C0"
               controlValue = control.value
            case typeValue $ "LU" .and. typeText = "C0"
               controlValue = control.text
            otherwise
               controlValue = Null
         endcase
         if controlValue <> &fieldValue
            form.changesMade = .T.
         endif
      endif
   endif
   if form.changesMade .and. callCommit
      CLASS::CheckCommit(form.inEditMode)     && Check transactions
   endif

   Procedure Go_last
      form.CheckCommit(form.inEditMode)
       if .not. empty(FGJCNTS->order_no)
   select fgjcrup
   seek FGJCNTS->order_no+dtos(FGJCNTS->order_date)
   if found() .and. .not. empty(post_date)
   select FGJCNTS
   replace post_date with date()
   select fgtrnref
   replace post_date with date()
   flush
   endif
   endif
   form.root.order.viewEdit.enabled = .t.
   form.root.order.ADDorder.enabled = .t.
    form.root.order.ADDline.enabled = .t.

   SELECT FGJCNTS
      go bottom
   form.root.file.exit.enabled =   .t.

     Procedure Go_Top
     form.CheckCommit(form.inEditMode)
      if .not. empty(FGJCNTS->order_no)
   select fgjcrup
   seek FGJCNTS->order_no+dtos(FGJCNTS->order_date)
   if found() .and. .not. empty(post_date)
   select FGJCNTS
   replace post_date with date()
   select fgtrnref
   replace post_date with date()
   flush
   endif
   endif
   form.root.order.viewEdit.enabled = .t.
   form.root.order.ADDorder.enabled = .t.
    form.root.order.ADDline.enabled = .t.

   SELECT FGJCNTS
     go top
    form.root.file.exit.enabled =   .t.

   Procedure Form_CanClose
      RETURN IIF(form.changesmade = .F., .F., .T.)

    Procedure SPROD_ONCHANGE
        local l1,l2,l3,l4,l5,l6,l7,e1,L8,L9,L10,L11,L12,L13,L14,lprice,lcost,lst15,;
        l111,l112,l113,l114
              e1 = .f.
               FORM.AMTENTRY.ENABLED = .F.
                FORM.qtyENTRY.ENABLED = .F.

                lst15 = .t.
    select FGMASTp
   seek this.value
   if found()
      form.changesmade = .t.

            select Fgjcnlin
            replace name with this.value
                l1 = FGMASTp->COY
               l2 = FGMASTp->dIV
               l3 = FGMASTp->CEN
               l4 = FGMASTp->STO
               l5 = FGMASTp->TYP
               l6 = FGMASTp->CLA
               l7 = FGMASTp->COD
               SELECT FGCOD
               SEEK  L5+L6+L7
               select Fgjcnlin
                if .not. (l5 = Fgjcnlin->typ .and. l6 = Fgjcnlin->cla .and. l7 = Fgjcnlin->cod)

           REPLACE SELL_PRICE WITH 0
           REPLACE ON_HAND WITH 0
   REPLACE NDISCOUNT WITH 0
      replace sprice with 0
     replace stotal with 0
     replace qty with 0
     replace svat with 0
        replace qty with 0
        replace sell_price with 0
        replace total with 0
        replace amt_alloc with 0
        replace bal_alloc with 0
         REPLACE discount WITH 0
         replace gross_amt with 0
          replace volume with 0
     replace cost_price with 0
         REPLACE TOTAL_AMT WITH 0
          REPLACE NDISCOUNT WITH 0
          replace basic_qty with 0
          replace bas_amt with 0
          form.changesmade = .t.
             endif
               l111 = FGMASTp->st_COY
               l112 = FGMASTp->st_dIV
               l113 = FGMASTp->st_CEN
               l114 = FGMASTp->st_STO
               L8 = form.pshdate
               L9 = form.pshno
               L10 = form.pshid
           SELECT Fgjcnlin
           REPLACE SHIFT_DATE WITH {}
           REPLACE SHIFT_NO WITH ""
           REPLACE SHIFT_ID WITH ""
           REPLACE COY WITH ""
           REPLACE DIV WITH ""
           REPLACE CEN WITH ""
           REPLACE STO WITH ""
           REPLACE TYP WITH ""
           REPLACE CLA WITH ""
           REPLACE COD WITH ""
            select fgmast2
               seek l111+l112+l113+l114+l5+l6+l7
               if .not. found()
               e1 = .t.
               endif


            if e1 = .F.

           lprice = 0
           lcost  = 0
               select Fgjcnlin
               replace Fgjcnlin->cod with L7
               REPLACE PRODNAME WITH FGCOD->NAME
                    REPLACE COY WITH FGMASTp->COY
           REPLACE DIV WITH FGMASTp->DIV
           REPLACE CEN WITH FGMASTp->CEN
           REPLACE STO WITH FGMASTp->STO
           REPLACE TYP WITH FGMASTp->TYP
           REPLACE CLA WITH FGMASTp->CLA
           REPLACE COD WITH FGMASTp->COD
           replace st_coy with fgmastp->st_coy
           replace st_div with fgmastp->st_div
           replace st_cen with fgmastp->st_cen
           replace st_sto with fgmastp->st_sto
            replace volume with FGCOD->volume
            replace fcdiv with FGCOD->fcdiv
           replace fcpurch with FGCOD->fcpurch
           IF DIV = "1" .and. typ >= "00" .and. typ <= "9Z" .and. form.pfc
           REPLACE SHIFT_DATE WITH L8
           REPLACE SHIFT_NO WITH L9
           REPLACE SHIFT_ID WITH L10
            SELECT ST15F
             SEEK DTOS(L8)+L9+L10+L3+L5+L6+L7+L4+L1+l2
             if .not. found()
             lst15 = .f.
             go top
             endif
             SELECT FCCASHRS
             SEEK Fgjcnlin->cen  && Island
             if found() .and. OFF = Fgjcnlin->OFF
             else
                LST15 = .F.
                       InformationMessage("The Cashier is not Allocated to This  Island", "Sorry!")
           ENDIF
           ENDIF
              if .not. lst15
               SELECT Fgjcnlin
               replace coy with ""
               replace cen with ""
               replace sto with ""
                REPLACE DIV WITH ''
               endif
               IF EMPTY(FGSTKNOS->STOCK_NO)
                select fgjobcad
              go top
              IF  st_coy =  Fgjcnlin->coy .and. st_div =  Fgjcnlin->div ;
               .and. st_cen =  Fgjcnlin->cen .and. st_sto =  Fgjcnlin->sto ;
                .and. typ =  Fgjcnlin->typ .and. cla =  Fgjcnlin->cla ;
                 .and. cod =  Fgjcnlin->cod .and. order_no =  fgjcnts->o_order ;
                  .and. order_date =  fgjcnts->o_date
                       select Fgjcnlin
                  replace bas_amt with fgjobcad->total_amt*-1
                  replace driver with fgjobcad->driver
                  replace basic_qty with fgjobcad->qty
                  replace qty with basic_qty
                  REPLACE STOCK_NO WITH fgjobcad->STOCK_NO
                  replace srep with fgjobcad->srep
                  replace discount with fgjobcad->new_bal * -1
                  replace Fgjcnlin->SELL_PRICE with fgjobcad->LIST_PRICE
                replace cost_price with fgjobcad->UNIT_COST
                replace vat with fgjobcad->TAX_RATE
                REPLACE TOTAL_COST WITH FGJOBCAD->TOTAL * -1
                **
                replace sell_price with fgjobcad->list_price
                replace total_amt with fgjobcad->total_amt*-1
                replace vat_out  with fgjobcad->tax_amt * -1
                replace total  with fgjobcad->total*-1
                replace gross_amt  with fgjobcad->gross_amt*-1
               **
                  form.smkeyref.enabled = .f.
                  ELSE
                locate REST FOR st_coy =  Fgjcnlin->coy .and. st_div =  Fgjcnlin->div ;
               .and. st_cen =  Fgjcnlin->cen .and. st_sto =  Fgjcnlin->sto ;
                .and. typ =  Fgjcnlin->typ .and. cla =  Fgjcnlin->cla ;
                 .and. cod =  Fgjcnlin->cod .and. order_no =  fgjcnts->o_order ;
                  .and. order_date =  fgjcnts->o_date
                  if found()
                  select Fgjcnlin
                  replace bas_amt with fgjobcad->total_amt*-1
                  replace driver with fgjobcad->driver
                  replace basic_qty with fgjobcad->qty
                  replace qty with basic_qty
                  REPLACE STOCK_NO WITH fgjobcad->STOCK_NO
                   replace srep with fgjobcad->srep
                  replace discount with fgjobcad->new_bal * -1
                    replace Fgjcnlin->SELL_PRICE with fgjobcad->LIST_PRICE
                replace cost_price with fgjobcad->UNIT_COST
                replace vat with fgjobcad->TAX_RATE
         REPLACE TOTAL_COST WITH FGJOBCAD->TOTAL * -1
         replace sell_price with fgjobcad->list_price
                replace total_amt with fgjobcad->total_amt*-1
                replace vat_out  with fgjobcad->tax_amt * -1
                replace total  with fgjobcad->total*-1
                replace gross_amt  with fgjobcad->gross_amt*-1
                  form.smkeyref.enabled = .f.
                  ELSE
                   select Fgjcnlin
                      REPLACE SELL_PRICE WITH 0
           REPLACE ON_HAND WITH 0
   REPLACE NDISCOUNT WITH 0
      replace sprice with 0
     replace stotal with 0
     replace qty with 0
     replace svat with 0
        replace qty with 0
        replace sell_price with 0
        replace total with 0
        replace amt_alloc with 0
        replace bal_alloc with 0
         REPLACE discount WITH 0
         replace gross_amt with 0
          replace volume with 0
     replace cost_price with 0
         REPLACE TOTAL_AMT WITH 0
          REPLACE NDISCOUNT WITH 0
          replace basic_qty with 0
          replace bas_amt with 0

                  ENDIF
                  ENDIF
              *    ENDIF
                  ELSE
                   select fgjobcad
              go top
              IF  st_coy =  Fgjcnlin->coy .and. st_div =  Fgjcnlin->div ;
               .and. st_cen =  Fgjcnlin->cen .and. st_sto =  Fgjcnlin->sto ;
                .and. typ =  Fgjcnlin->typ .and. cla =  Fgjcnlin->cla ;
                 .and. cod =  Fgjcnlin->cod .and. order_no =  fgjcnts->o_order ;
                  .and. order_date =  fgjcnts->o_date .AND. STOCK_NO = FGSTKNOS->STOCK_NO
                       select Fgjcnlin
                  replace bas_amt with fgjobcad->total_amt*-1
                  replace driver with fgjobcad->driver
                  replace basic_qty with fgjobcad->qty
                  replace qty with basic_qty
                  REPLACE STOCK_NO WITH fgjobcad->STOCK_NO
                   replace srep with fgjobcad->srep
                  replace discount with fgjobcad->new_bal * -1
                    replace Fgjcnlin->SELL_PRICE with fgjobcad->LIST_PRICE
                replace cost_price with fgjobcad->UNIT_COST
                replace vat with fgjobcad->TAX_RATE
         REPLACE TOTAL_COST WITH FGJOBCAD->TOTAL * -1
         replace sell_price with fgjobcad->list_price
                replace total_amt with fgjobcad->total_amt*-1
                replace vat_out  with fgjobcad->tax_amt * -1
                replace total  with fgjobcad->total*-1
                replace gross_amt  with fgjobcad->gross_amt*-1
                  form.smkeyref.enabled = .f.
                  ELSE
                locate REST FOR st_coy =  Fgjcnlin->coy .and. st_div =  Fgjcnlin->div ;
               .and. st_cen =  Fgjcnlin->cen .and. st_sto =  Fgjcnlin->sto ;
                .and. typ =  Fgjcnlin->typ .and. cla =  Fgjcnlin->cla ;
                 .and. cod =  Fgjcnlin->cod .and. order_no =  fgjcnts->o_order ;
                  .and. order_date =  fgjcnts->o_date .AND. STOCK_NO = FGSTKNOS->STOCK_NO
                  if found()
                  select Fgjcnlin
                  replace bas_amt with fgjobcad->total_amt*-1
                  replace driver with fgjobcad->driver
                  replace basic_qty with fgjobcad->qty
                  replace qty with basic_qty
                  REPLACE STOCK_NO WITH fgjobcad->STOCK_NO
                   replace srep with fgjobcad->srep
                  replace discount with fgjobcad->new_bal * -1
                    replace Fgjcnlin->SELL_PRICE with fgjobcad->LIST_PRICE
                replace cost_price with fgjobcad->UNIT_COST
                replace vat with fgjobcad->TAX_RATE
         REPLACE TOTAL_COST WITH FGJOBCAD->TOTAL * -1
         replace sell_price with fgjobcad->list_price
                replace total_amt with fgjobcad->total_amt*-1
                replace vat_out  with fgjobcad->tax_amt * -1
                replace total  with fgjobcad->total*-1
                replace gross_amt  with fgjobcad->gross_amt*-1
                  form.smkeyref.enabled = .f.
                  ELSE
                   select Fgjcnlin
                      REPLACE SELL_PRICE WITH 0
           REPLACE ON_HAND WITH 0
   REPLACE NDISCOUNT WITH 0
      replace sprice with 0
     replace stotal with 0
     replace qty with 0
     replace svat with 0
        replace qty with 0
        replace sell_price with 0
        replace total with 0
        replace amt_alloc with 0
        replace bal_alloc with 0
         REPLACE discount WITH 0
         replace gross_amt with 0
          replace volume with 0
     replace cost_price with 0
         REPLACE TOTAL_AMT WITH 0
          REPLACE NDISCOUNT WITH 0
          replace basic_qty with 0
          replace bas_amt with 0

                  ENDIF
                  ENDIF

              *    ENDIF
                  ENDIF
                 select Fgjcnts
                   IF FGCOD->qty = "Yes" .and. .not. FGCOD->shs_auto = "Yes" ;
                    .and. .not. FGCOD->typ = "00"
                   if fgcoy->stream = "Yes"
             FORM.qtyENTRY.ENABLED = .t.
             form.sprice.enabled = .f.
             else
               FORM.qtyENTRY.ENABLED = .t.
             form.sprice.enabled = .t.
       endif
              ELSE
              FORM.amtENTRY.ENABLED = .t.
            ENDIF
            endif
           endif


   Procedure SEMP1_ONCHANGE
          local l1
         l1 = this.value
         form.pf1name = this.value
         select FGOFFS
         seek l1
         if found()
               SELECT Fgjcntsl
    replace OFF with FGOFFS->OFF
         select Fgjcnts
         replace OFF with FGOFFS->OFF
         replace cashier_no with FGOFFS->cashier_no
         form.pcashierno = cashier_no
         form.pemp1 = OFF
         endif
         select Fgjcnts
         if empty(OFF) .or. empty(cashier_no)
        InformationMessage("Cashier Not Allocated to this function", "Note!")
                form.changesmade = .f.
                else
         form.changesmade = .t.
         endif

   Procedure QTYENTRY_OnChange
         LOCAL WK1,WK2,WK3,WK4,lvat
     select Fgjcnlin
             lvat = VAT
   WK3 = form.qtyentry.value
     wk1 = 0
     if typ > "00" .and. typ <= "99" .and. .not. left(typ,1) = "7"  ;
      .and. .not. FGCOD->shs_auto = "Yes"
       wk1 = FGMAST2->on_hand - wk3
      endif
        if .not. this.value = fgjobcad->qty
       InformationMessage("Quantity Out Of Range", "Sorry!")
       form.qtyentry.value = 0
       endif
        if empty(off) .or. empty(cashier_no) .or. empty(driver)
      InformationMessage("Check Served By and Cashier", "Sorry!")
      replace qty with 0
   form.qtyentry.value = 0
   endif
   replace on_hand with wk1
   replace qty with form.qtyentry.value


                   local ltyp,lcla,lvol,ltvol,LDIV
   ltyp = Fgjcnlin->typ
   lcla = Fgjcnlin->cla
   lvol = FGCOD->volume

   LDIV = DIV
   ltvol = Fgjcnlin->qty * lvol
   replace dis_qty with 0
   replace lub_qty with 0
   replace unl_qty with 0
   replace ker_qty with 0
   replace reg_qty with 0
   replace sup_qty with 0
   replace lpg_qty with 0
   replace mis_qty with 0
   replace ser_qty with 0
   replace spa_qty with 0
   replace scr_qty with 0

   replace dis_amt with 0
   replace lub_amt with 0
   replace unl_amt with 0
   replace ker_amt with 0
   replace reg_amt with 0
   replace sup_amt with 0
   replace lpg_amt with 0
   replace mis_amt with 0
   replace ser_amt with 0
   replace spa_amt with 0
   replace scr_amt with 0


   if LTYP = "00"
      if Lcla = "00"
      replace sup_qty with qty
      replace sup_amt with total
   endif
   if Lcla = "10"
      replace unl_qty with qty
      replace unl_amt with total
   endif
   if Lcla = "20"
      replace reg_qty with qty
      replace reg_amt with total
   endif
   if Lcla = "30"
      replace dis_qty with qty
      replace dis_amt with total
   endif
   if Lcla = "40"
      replace ker_qty with qty
      replace ker_amt with total
   endif
   else
   if LTYP = "10"
   replace lub_qty with LTVOL
   replace lub_amt with total
     else
   if LTYP = "70"
   replace ser_qty with qty
   replace ser_amt with total
   else
   replace mis_qty with qty
   replace mis_amt with TOTAL
   endif
   endif
   endif
          form.changesmade = .t.

      form.browsechangesmade()
      if .not. fgjcnlin->total = fgjcnlin->total_cost .and. form.blevel < 4
      form.snet.enabled = .t.
      else
       form.snet.enabled = .f.
       endif

      select Fgjcnts


   Procedure AMTENTRY_OnChange
     LOCAL WK1,WK2,WK4,WK3,lcoy,ldiv,lcen,lsto,ltyp,lcla,lcod,lqty,lprice,lvat,lprice,lcost
         lvat = Fgjcnlin->VAT


     lcoy = Fgjcnlin->coy
      ldiv = Fgjcnlin->div
      lcen = Fgjcnlin->cen
       lsto = Fgjcnlin->sto
         ltyp = Fgjcnlin->typ
          lcla = Fgjcnlin->cla
           lcoD = Fgjcnlin->cod
             lprice = FGCOD->sale_Price
           lcost = FGCOD->cost_pricE

      select Fgjcnlin
      if .not.  this.value = (fgjobcad->total+fgjobcad->new_bal)*-1

       InformationMessage("Value Out Of Range", "Sorry!")
       form.amtentry.value = 0
       endif
         if empty(off) .or. empty(cashier_no) .or. empty(driver)
      InformationMessage("Check Served By and Cashier", "Sorry!")
    form.amtentry.value = 0
   endif

   *  IF .NOT. lprice = 0
   *  replace Fgjcnlin->qty with this.value/lprice
   *  ENDIF
     WK3 = Fgjcnlin->QTY

     WK1 = 0

   ltyp = Fgjcnlin->typ
   lcla = Fgjcnlin->cla
   lvol = FGCOD->volume
   LDIV = DIV
   ltvol = Fgjcnlin->qty * lvol
   replace dis_qty with 0
   replace lub_qty with 0
   replace unl_qty with 0
   replace ker_qty with 0
   replace reg_qty with 0
   replace sup_qty with 0
   replace lpg_qty with 0
   replace mis_qty with 0
   replace ser_qty with 0
   replace spa_qty with 0
   replace scr_qty with 0

   replace dis_amt with 0
   replace lub_amt with 0
   replace unl_amt with 0
   replace ker_amt with 0
   replace reg_amt with 0
   replace sup_amt with 0
   replace lpg_amt with 0
   replace mis_amt with 0
   replace ser_amt with 0
   replace spa_amt with 0
   replace scr_amt with 0


   if LTYP = "00"
      if LCla = "00"
      replace sup_qty with qty
      replace sup_amt with total
   endif
   if Lcla = "10"
      replace unl_qty with qty
      replace unl_amt with total
   endif
   if Lcla = "20"
      replace reg_qty with qty
      replace reg_amt with total
   endif
   if Lcla = "30"
      replace dis_qty with qty
      replace dis_amt with total
   endif
   if Lcla = "40"
      replace ker_qty with qty
      replace ker_amt with total
   endif
   else
   if LTYP = "10"
   replace lub_qty with LTVOL
   replace lub_amt with total
     else
   if LTYP = "70"
   replace ser_qty with qty
   replace ser_amt with total
   else
   replace mis_qty with qty
   replace mis_amt with TOTAL
   endif
   endif
   endif
     form.changesmade = .t.
     IF THIS.VALUE = 0
           SELECT Fgjcnlin
           REPLACE ON_HAND WITH 0
           ENDIF
      form.browsechangesmade()

    FORM.AMTENTRY.ENABLED = .F.
         select Fgjcnts

    Procedure SSERVED_OnChange1
         select fgoffs2
         seek this.value
         if found()
         select fgjcnlin
         replace ndriver with this.value
         replace driver with fgoffs2->off
         else
          select fgjcnlin
         replace ndriver with ""
         replace driver with ""
         replace total_amt with 0
         replace qty with 0
         replace total with 0
         endif
         select fgjcnts
         form.changesmade = .t.


   Procedure SCASHIER_OnChange
         select fgoffs3
         seek this.value
         if found()
         select Fgjcnlin
         replace cashier_no with fgoffs3->cashier_no
         replace off with fgoffs3->off
         replace offname with this.value
         else
          select Fgjcnlin
         replace cashier_no with ""
         replace off with ""
         replace offname with ""
            endif
          replace name with ''
            replace coy with ""
               replace cen with ""
               replace sto with ""
         replace qty with 0
             replace total with 0
             replace TOTAL_amt with 0
         select Fgjcnts
         form.changesmade = .t.


   Procedure SMKEYREF_OnChange
   local ler
      ler = .t.
      select fgtrnref
      seek this.value
      if found()
         select fgjcnts
         replace mkeyref with fgtrnref->mkey
         replace o_order with fgtrnref->order_no
         replace o_date  with fgtrnref->order_date
         replace o_doc with fgtrnref->doctype
         replace o_sys with fgtrnref->system
         replace o_qty with fgtrnref->qty
         replace o_total with fgtrnref->total
         local l1,l2,l3,l4,l5,l6
         l1 = o_order
         l2 = dtos(o_date)
         l3 = o_doc
         l4 = o_sys
         select fgjobcad
         set filter to doctype = "JC" .and. system = "PS" .and. .not. (total = 0 .and. qty = 0) ;
          .AND. ORDER_NO = FGJCNTS->O_ORDER .AND. ORDER_DATE = FGJCNTS->O_DATE
          GO TOP
         seek l1+l2+l3+l4
         if found()
         select fgjcnts
         replace source with "1"
         replace ftyp with "1"
         replace pmod with "1"
         replace frighter_n with "0001"
           replace customer with "CASH"
          replace reg with fgjobcad->reg
          replace serialno with fgjobcad->serialno
          ler = .f.
         endif
         endif

   if  ler
      select fgjcnts
        replace mkeyref with ""
         replace o_order with ""
         replace o_date  with {}
         replace o_doc with ""
         replace o_qty with 0
         replace o_total with 0
         replace o_sys with ""
          replace source with ""
         replace ftyp with ""
         replace pmod with ""
         replace frighter_n with ""
          REPLACE SERIALNO WITH ""
         endif
         form.changesmade = .t.

   Procedure SDL_OnChange
      select fgstknos
      replace stock_no with this.value
      select fgjcnts
      form.changesmade = .t.

   Procedure SNET_OnChange
   select fgjcnlin
   if this.value = total_cost
   replace total with this.value
   else
   replace total with 0
   endif
   form.changesmade =.t.
   form.browsechangesmade()
   select fgjcnts

ENDCLASS
