
******************************************************************************
*  PROGRAM:      PCREPLS.mnu
*
*  WRITTEN BY:   W M Nyongesa
*
*  DATE:         12/93
*
*  UPDATED:      04/2015
*
*  REVISION:     $Revision:   1.58  $
*
*  VERSION:      Visual dBASE
*
*  DESCRIPTION:  This is a menu file used by PCREPLS.wfm for
*                performing simple tasks.  It allows adding and deleting
*                records, searching for a value in the order field of the
*                current table viewed, and exiting the form in view.
*
*  PARAMETERS:   FormObj -- the form to which this menu will belong.
*
*  CALLS:        None
*
*  USAGE:        form.menuFile = "PCREPLS.mnu"
*
*******************************************************************************
#include <Messdlg.h>

** END HEADER -- do not remove this line*
* Generated on 05/06/94
*
Parameter FormObj
NEW PCREPLS(FormObj,"Root")
CLASS PCREPLS(FormObj,Name) OF MENUBAR(FormObj,Name)
   this.Text = ""
   this.OnInit = {;set procedure to Sampproc.prg}

   DEFINE MENU FILE OF THIS;
       PROPERTY;
         Text "&FILE"

         DEFINE MENU EXIT OF THIS.FILE;
                 PROPERTY; 
                 StatusMessage "Return to the Previous Menu.",;
                 Text "&Return to Previous Menu",;
                  ShortCut "F4",;
                 OnClick CLASS::ONEXITALL

        
          DEFINE MENU SEPARATOR000 OF THIS.FILE;
                 PROPERTY;
                 Separator .T.,;
                 Text ""


          DEFINE MENU QUITS OF THIS.FILE;
                 PROPERTY; 
                 StatusMessage "Leave Kenserve Integrated System",;
                 Text "Exit",;
                 ShortCut "F8",;
                 OnClick CLASS::QUITALL
                 
   DEFINE MENU ORDER OF THIS;
       PROPERTY;
         Text "Replenish"

         DEFINE MENU VIEWEDIT OF THIS.order;
             PROPERTY;
               OnClick CLASS::VIEWEDITONCLICK,;
               Text "&EDIT",;
               Shortcut "Ctrl-E",;
               StatusMessage "Edit data."

         DEFINE MENU SEPARATOR1 OF THIS.ORDER;
             PROPERTY;
               Separator .T.,;
                  Text ""

         DEFINE MENU ADDORDER OF THIS.order;
             PROPERTY;
               OnClick CLASS::ADDORDERONCLICK,;
               Text "ADD-New Replenish",;
               Enabled .T.,;
               Shortcut "F3",;
               StatusMessage "Add replenishment."

       DEFINE MENU ADDLINE OF THIS.order;
             PROPERTY;
               OnClick CLASS::ADDLINEONCLICK,;
               Text "ADD-ITEM",;
               Enabled .T.,;
               Shortcut "F7",;
               StatusMessage "Add a new product, item or service to the Replenishment."
               
               DEFINE MENU DELETELINE OF THIS.ORDER;
             PROPERTY;
               OnClick CLASS::DELETELINEONCLICK,;
               Text "Delete IteM",;
               Enabled .F.,;
               Shortcut "Ctrl-M",;
               StatusMessage "Delete the current product."
          
         DEFINE MENU SEPARATOR2 OF THIS.ORDER;
             PROPERTY;
               Separator .T.,;
               Text ""

       
               
DEFINE MENU REPORT OF THIS;
       PROPERTY; 
         Text "TASKS"

         DEFINE MENU REPORT OF THIS.report;
       PROPERTY;
         Text "1. Save",;
         enabled .t.,;
        OnClick CLASS::F5_RTN,;
               Shortcut "F5"
        
         DEFINE MENU REPORT2 OF THIS.report;
       PROPERTY;
         Text "2. Print",;
         enabled .t.,;
        OnClick CLASS::F9_RTN,;
               Shortcut "F9"
               
                
         DEFINE MENU REPORT3 OF THIS.report;
       PROPERTY;
         Text "3. Duplicate",;
         enabled .T.,;
        OnClick {; do PCREPLSp.prg with form.bluser},;
               Shortcut "F1"
  
   
   
*******************************************************

  procedure DeleteLineOnClick
   PRIVATE Ppcoy,Ppdiv,Ppcen,Ppsto,Pptyp,Ppcla,Ppcod,PPRQTY,pamt
   * Delete current record.
   ****************************************************************************
      select PCREPLIN
   if ConfirmationMessage("Are you sure you want to delete this Item?",;
                          "Confirm") = YES .AND. EMPTY(PCREPLS->post_date) ;
                           .and. .not. eof()
            
     select PCREPLIN
            
             pamt = total
      delete  && DELETED is ON, so deleted records are still there until
              && a PACK is executed
              select PCREPLS
              replace PCREPLS->items with PCREPLS->items - 1
              replace total with total - pamt
              IF PCREPLS->ITEMS = 0
              REPLACE PCREPLS->TOTAL WITH 0
    
              ENDIF
           SELECT PCREPLS
              
      commit()
      form.changesMade = .F.
   *   begintrans()
   *        on error DO transerr WITH ERROR(), MESSAGE(),;
  PROGRAM(), LINENO()
   endif
   SELECT PCREPLIN
   IF .NOT. EOF() .and. .not. bof()
     FORM.BROWSECHANGESMADE()
     ELSE
     SELECT PCREPLS
      replace PCREPLS->total with 0
   replace PCREPLS->items with 0
 ENDIF
   SELECT PCREPLS
   ****************************************************************************
   procedure ADDORDERONCLICK

   * Add new record.
   ****************************************************************************
   private addForm, newOrder, saleDateField, orderNoField, custNoField, custNo,;
           inEditMode, integrityInEffect,CustTyp,pdate1,pvatp
   form.CheckChanged(.T.)
                          pvatp = FORM.PVATPRICE
                          pdate1 = FORM.PSHIFTDATE
  
      orderNoField = field(1)                 && order_no field
          OrderDateField = field(7)                && Order_date field
 select PCREPLIN2
 go bottom
      select PCREPLS3
      go bottom
       IF empty(order_no) .or. .not. empty(post_date)
      if type("form.curPage") <> "U"
         inEditMode = form.curPage.inEditMode
         integrityInEffect = .T.              && Table integrity rules are used
      else
         inEditMode = form.inEditMode
         integrityInEffect = .F.
      endif

      if .not. inEditMode
         form.ViewEdit()                      && Make sure record is editable
      else if type("form.childBrowse") <> "U" && If calling from VENDOR/PCREPLS
         form.childBrowse.setFocus()
      endif
      form.changesMade = .T.
        form.previousRecord = recno()
        select PCREPLS3
      go bottom
    
    form.maxOrder = order_no
     local ls1,ls2,ls3,ls4,ls5
      SELECT PCREPLS
       if empty(form.maxOrder)
      form.maxOrder = pcreplsn->order_no  && start of first operator
      endif
      append blank
      orderNoField = field(1)
      newOrder = val(form.maxOrder) + 1
      local wk1,wk2
       wk1 = neworder
      if wk1 > 0 .and. wk1 < 10
      wk2 = "00000"+str(wk1,1)
      else
      if wk1 > 9 .and. wk1 < 100
      wk2 = "0000"+str(wk1,2)
      else
       if wk1 > 99 .and. wk1 < 1000
      wk2 = "000"+str(wk1,3)
      else
       if wk1 > 999 .and. wk1 < 10000
      wk2 = "00"+str(wk1,4)
      else
       if wk1 > 9999 .and. wk1 < 100000
      wk2 = "0"+str(wk1,5)
      else
      wk2 = str(wk1,6)
      endif
      endif
      endif
      endif
      endif
     replace order_no with wk2     && Assign new order number
      replace items with 1
       replace  total with 0
       replace order_date with  pdate1
         replace bl_amt with 0
        replace al_amt with 0
        replace l_amt with 0
           replace paytype  with "Invoice"
        
        replace invtotal with 0
        replace paytotal with 0
        replace deptotal with 0
        REPLACE OFF WITH PCREPLS3->OFF
        REPLACE CASHIER_NO WITH PCREPLS3->CASHIER_NO
        REPLACE ANAME WITH PCREPLS3->ANAME
        REPLACE DDE_DATE WITH DATE()
        REPLACE DDE_TIME WITH TIME()
        REPLACE DDE_USER WITH FORM.BLUSER
        REPLACE SHIFTNO WITH FORM.PSHIFTNO
        REPLACE SHIFTID WITH FORM.PSHIFTID
        replace prd with PCREPLS3->prd
        replace start_date  with PCREPLS3->start_date
        replace end_date with PCREPLS3->end_date
             replace inv_date with PCREPLS3->inv_date
        if empty(inv_date)
        replace inv_date with order_date
        endif
         replace bcoy with "1"
          replace bcen with "1"
           replace bdiv with "5"
            replace bsto with "A1"
        
            select PCREPLSL
    replace order_no with PCREPLS->order_no
    replace order_date with PCREPLS->order_date
     
 
      select PCREPLIN3
     append blank
     replace order_no with PCREPLS->order_no
     replace stock_no with "01"
      replace order_date with PCREPLS->order_date
       replace other_date with order_date
        replace total with 0
           replace invtotal with 0
        replace paytotal with 0
        replace deptotal with 0
        replace  coy with "1"
replace  div with "5"
replace  cen with "1"
replace  sto with "A1"
 REPLACE DDE_DATE WITH DATE()
        REPLACE DDE_TIME WITH TIME()
        REPLACE DDE_USER WITH FORM.BLUSER
      
      selec PCREPLIN
refresh
go bottom
           select PCREPLS
        SEEK PCREPLSL->ORDER_NO
       form.soff.enabled = .t.
        if fgcoy->pospost = "Yes"
        form.CheckCommit(form.inEditMode)
        select PCREPLS
        seek PCREPLSl->order_no
           replace paytype  with "Invoice"
              REPLACE SHIFTNO WITH FORM.PSHIFTNO
        REPLACE SHIFTID WITH FORM.PSHIFTID
       refresh
         form.soff.setfocus()
         else
         form.sdate.enabled = .t.
         form.CheckCommit(form.inEditMode)
         select PCREPLS
        seek PCREPLSl->order_no
          replace paytype  with "Invoice"
              REPLACE SHIFTNO WITH FORM.PSHIFTNO
        REPLACE SHIFTID WITH FORM.PSHIFTID
    
         refresh
         form.sdate.setfocus()
         endif
   endif
   
   procedure ADDLINEONCLICK
      LOCAL L1,wk1,wk2,l2,l3,l4,ls3,ls4,ls5,LNAME
 
   form.CheckChanged(.T.)
       form.changesMade = .T.
         select PCREPLIN2
        go bottom
        if (.not. empty(stock_no)  .and. .not. empty(order_no) ;
         .and. .not. empty(PCREPLS->order_no) .and. .not. PCREPLIN2->total = 0 ) ;
          .or. (empty(stock_no) .and. .not. empty(PCREPLS->ORDER_NO))
         L1 = val(STOCK_NO) + 1
         wk1 = l1
         if wk1 > 99
         quit
         endif
          if wk1 > 0 .and. wk1 < 10
      wk2 = "0"+str(wk1,1)
      else
      wk2 = str(wk1,2)
      endif
      if val(wk2) < 2
      select PCREPLIN3
         append blank
         replace order_no with PCREPLS->order_no
      replace stock_no with wk2
            replace order_date with PCREPLS->order_date
       replace total with 0
        replace other_date with PCREPLIN2->other_date
        if empty(other_date)
        replace other_date with PCREPLS->order_date
        endif
         REPLACE DDE_DATE WITH DATE()
        REPLACE DDE_TIME WITH TIME()
        REPLACE DDE_USER WITH FORM.BLUSER
           replace invtotal with 0
        replace paytotal with 0
        replace deptotal with 0
       replace  coy with "1"
replace  div with "5"
replace  cen with "1"
replace  sto with "A1"
select PCREPLIN
refresh
go bottom
          select PCREPLS
         replace PCREPLS->items with PCREPLS->items + 1
         REPLACE SHIFTNO WITH FORM.PSHIFTNO
        REPLACE SHIFTID WITH FORM.PSHIFTID
     REPLACE ORDER_DATE WITH FORM.PSHIFTDATE
        
           FORM.sref.setfocus()
   endif
   endif
   select pcrepls
     ***************************************************************************
   procedure ViewEditOnClick
   ****************************************************************************
if .not. empty(PCREPLS->order_no)
   form.ViewEdit()
   endif

   ****************************************************************************
   procedure Exit_OnClick
   ****************************************************************************
FORM.OKEXIT = .T.
       form.Release()
Procedure F9_rtn
 form.CheckCommit(form.inEditMode)
if    form.inEditMode
      form.ViewEdit()
      form.root.order.viewEdit.enabled = .F.
   endif
   form.sdtotal.enabled = .f.
   form.root.order.ADDorder.enabled = .f.      
    form.root.order.ADDline.enabled = .f.
    local lerr
    lerr = .f.
  if  PCREPLS->total = 0  .or. .not. EMPTY(post_DATE) ;
      .or.  EMPTY(PCREPLS->BCOY)  .or.   EMPTY(PCREPLS->BTYP);
      .or.  EMPTY(PCREPLS->BCLA);
       .or.  EMPTY(PCREPLS->BCOD)  .or.  EMPTY(vsrce) ;
        .or.  EMPTY(vtyp) .or. EMPTY(vpmod) .or.  EMPTY(VENDOR_N) ;
         .or.  EMPTY(OFF)  .or.  empty(cashier_no) .OR. EMPTY(PCREPLIN->COY) ;
         .OR. EMPTY(PCREPLIN->DIV) .OR. EMPTY(PCREPLIN->CEN) .OR. EMPTY(PCREPLIN->STO) ;
         .OR. EMPTY(PCREPLIN->TYP) .OR. EMPTY(PCREPLIN->CLA).OR. EMPTY(PCREPLIN->COD) ;
          .OR. EMPTY(PAY_METHOD)
         lerr = .t.
         ? "err 1"
         endif
      IF .NOT. (PAY_METHOD = "FC Cash" .or. pay_method = "Cheque" .or. pay_method = "Capital" ;
       .or. pay_method = "Bank Debit" .or. pay_method = "Hqcheque" .or. pay_method = "Hqcash")
       lerr = .t.
       ? "err 2"
         endif
   IF PCREPLS->VENDOR_N = "0001"  .AND. .NOT. (PCREPLIN->TYP = "C0" .AND. PCREPLIN->CLA = "00" .AND. PCREPLIN->COD = "11")
   LERR = .T.
   ? "ERR 3"
   ENDIF
       
   IF .NOT.  PCREPLS->VENDOR_N = "0001"
    LERR = .T.
   ? "ERR 4"
   ENDIF
   IF PCREPLIN->TYP = "C0" .AND. PCREPLIN->CLA = "00";
   .AND. PCREPLIN->COD = "11" .AND. .NOT. PCREPLS->VENDOR_N = "0001"
    LERR = .T.
   ? "ERR 5"
   ENDIF
   
      if pay_method = "FC Cash" .and. .not. (btyp = "C0" .and. bcla = "00" .and. bcod = "01")
    lerr = .t.
    ? "err 6"
    endif
       if pay_method = "Hqcash" .and. .not. (btyp = "L0" .and. bcla = "00" .and. bcod = "00")
    lerr = .t.
    ? "err 6b"
    endif
    
    if (pay_method = "Cheque" .or. pay_method = "Bank Debit");
    .and. .not. (btyp = "C0" .and. bcla = "00" .and. .not.  (RIGHT(Bcod,2) = "01" .or. RIGHT(Bcod,2) = "11"))
      lerr = .t.
      ? "err 7"
      endif
   if (pay_method = "Cheque" .or. pay_method = "Bank Debit" .or. pay_method = "Hqcheque") .and. empty(serialno)
     lerr = .t.
      ? "err 8"
      endif
      if (pay_method = "Capital" .or. pay_method = "Hqcheque")     .and. .not. BTYP = 'W0'
    lerr = .t.
    ? "err 9"
    endif
    if BTYP = 'W0'   .and. .not. (pay_method = "Capital" .or. pay_method = "Hqcheque")
     lerr = .t.
    ? "err 10"
    endif
    if BTYP = 'L0'   .and. .not. pay_method = "Hqcash" 
     lerr = .t.
    ? "err 10b"
    endif
    if BTYP = 'L0'   .and. empty(hqv_n) 
     lerr = .t.
    ? "err 10c"
    endif
    if .not. empty(hqv_n) .and. .not. (BTYP = 'L0'   .and. pay_method = "Hqcash" )
     lerr = .t.
    ? "err 10d"
    endif
    if btyp = "C0" .and. bcla = "00" .and. .not.  (RIGHT(Bcod,2) = "01" .or. RIGHT(Bcod,2) = "11") ;
    .and. .not. (pay_method = "Cheque" .or. pay_method = "Bank Debit")
      lerr = .t.
    ? "err 11"
    endif
    if BTYP = 'W0'   .and. .not. (pay_method = "Capital" .or. pay_method = "Hqcheque")
        lerr = .t.
    ? "err 12"
    endif
    if .not. (empty(dtyp) .or. empty(cname))  .and. .not. pay_method = "Hqcheque"
        lerr = .t.
    ? "err 13"
    endif
     if   pay_method = "Hqcheque" .and. (empty(dtyp)  .or. empty(source))
        lerr = .t.
    ? "err 14"
    endif
     if  .not. form.bcents
       lerr = .t.
     ? 'problem 15'
     endif
    if .not. lerr
 FORM.CHANGESMADE = .T.
 do pc30repl.prg WITH FORM.BLUSER,FORM.BLEVEL
do PCREPLSp.prg WITH FORM.BLUSER
form.Go_Top()
endif

Procedure F5_rtn
 form.CheckCommit(form.inEditMode)
if    form.inEditMode
      form.ViewEdit()
      form.root.order.viewEdit.enabled = .F.
   endif
   form.sdtotal.enabled = .f.
   form.root.order.ADDorder.enabled = .f.      
    form.root.order.ADDline.enabled = .f.
SELECT PCREPLS
local lerr
lerr = .f.
  if  PCREPLS->total = 0  .or. .not. EMPTY(post_DATE) ;
      .or.  EMPTY(PCREPLS->BCOY)  .or.   EMPTY(PCREPLS->BTYP);
      .or.  EMPTY(PCREPLS->BCLA);
       .or.  EMPTY(PCREPLS->BCOD)  .or.  EMPTY(vsrce) ;
        .or.  EMPTY(vtyp) .or. EMPTY(vpmod) .or.  EMPTY(VENDOR_N) ;
         .or.  EMPTY(OFF)  .or.  empty(cashier_no) .OR. EMPTY(PCREPLIN->COY) ;
         .OR. EMPTY(PCREPLIN->DIV) .OR. EMPTY(PCREPLIN->CEN) .OR. EMPTY(PCREPLIN->STO) ;
         .OR. EMPTY(PCREPLIN->TYP) .OR. EMPTY(PCREPLIN->CLA).OR. EMPTY(PCREPLIN->COD) ;
          .OR. EMPTY(PAY_METHOD)
         lerr = .t.
         ? "err 1"
         endif
     IF .NOT. (PAY_METHOD = "FC Cash" .or. pay_method = "Cheque" .or. pay_method = "Capital" ;
       .or. pay_method = "Bank Debit" .or. pay_method = "Hqcheque" .or. pay_method = "Hqcash")
       lerr = .t.
       ? "err 2"
         endif
   IF PCREPLS->VENDOR_N = "0001"  .AND. .NOT. (PCREPLIN->TYP = "C0" .AND. PCREPLIN->CLA = "00" .AND. PCREPLIN->COD = "11")
   LERR = .T.
   ? "ERR 3"
   ENDIF
       
   IF .NOT.  PCREPLS->VENDOR_N = "0001"
    LERR = .T.
   ? "ERR 4"
   ENDIF
   IF PCREPLIN->TYP = "C0" .AND. PCREPLIN->CLA = "00";
   .AND. PCREPLIN->COD = "11" .AND. .NOT. PCREPLS->VENDOR_N = "0001"
    LERR = .T.
   ? "ERR 5"
   ENDIF
   
      if pay_method = "FC Cash" .and. .not. (btyp = "C0" .and. bcla = "00" .and. bcod = "01")
    lerr = .t.
    ? "err 6"
    endif
       if pay_method = "Hqcash" .and. .not. (btyp = "L0" .and. bcla = "00" .and. bcod = "00")
    lerr = .t.
    ? "err 6b"
    endif
    
    if (pay_method = "Cheque" .or. pay_method = "Bank Debit");
    .and. .not. (btyp = "C0" .and. bcla = "00" .and. .not.  (RIGHT(Bcod,2) = "01" .or. RIGHT(Bcod,2) = "11"))
      lerr = .t.
      ? "err 7"
      endif
   if (pay_method = "Cheque" .or. pay_method = "Bank Debit" .or. pay_method = "Hqcheque") .and. empty(serialno)
     lerr = .t.
      ? "err 8"
      endif
      if (pay_method = "Capital" .or. pay_method = "Hqcheque")     .and. .not. BTYP = 'W0'
    lerr = .t.
    ? "err 9"
    endif
    if BTYP = 'W0'   .and. .not. (pay_method = "Capital" .or. pay_method = "Hqcheque")
     lerr = .t.
    ? "err 10"
    endif
    if BTYP = 'L0'   .and. .not. pay_method = "Hqcash" 
     lerr = .t.
    ? "err 10b"
    endif
    if BTYP = 'L0'   .and. empty(hqv_n) 
     lerr = .t.
    ? "err 10c"
    endif
    if .not. empty(hqv_n) .and. .not. (BTYP = 'L0'   .and. pay_method = "Hqcash" )
     lerr = .t.
    ? "err 10d"
    endif
    if btyp = "C0" .and. bcla = "00" .and. .not.  (RIGHT(Bcod,2) = "01" .or. RIGHT(Bcod,2) = "11") ;
    .and. .not. (pay_method = "Cheque" .or. pay_method = "Bank Debit")
      lerr = .t.
    ? "err 11"
    endif
    if BTYP = 'W0'   .and. .not. (pay_method = "Capital" .or. pay_method = "Hqcheque")
        lerr = .t.
    ? "err 12"
    endif
    if .not. (empty(dtyp) .or. empty(cname))  .and. .not. pay_method = "Hqcheque"
        lerr = .t.
    ? "err 13"
    endif
     if   pay_method = "Hqcheque" .and. (empty(dtyp)  .or. empty(source))
        lerr = .t.
    ? "err 14"
    endif
    if   .not. form.bcents
       lerr = .t.
     ? 'problem 15'
     endif
     if .not. lerr
  
 FORM.CHANGESMADE = .T.
 do pc30repl.prg WITH FORM.BLUSER,FORM.BLEVEL
form.Go_Top()

 
  ENDIF
 procedure OnExitALL
            form.Release()
            
            
  Procedure QUITALL
             form.Release()
             QUIT
 
ENDCLASS

     